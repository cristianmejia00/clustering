this_summary <- data.frame(
'cluster_code' = i,
'egdes' = this_edges
)
summary_list <- append(summary_list, list(this_summary))
}
summary_df <- rbind(summary_list)
summary_df <- rbind(summary_list %>% unlist())
summary_df <- rbindlist(summary_list)
View(summary_df)
for (i in cluster_list) {
sections <- strsplit(i, "-")
tmp <- dataset_minimal %>%
filter(subcluster_label1 == i) %>%
pull("X_N") %>%
as.character()
this_vertices <- which(V(g1)$name %in% tmp)
tg1 <- subgraph(g1, this_vertices)
this_edges <- ecount(tg1)
this_summary <- data.frame(
'cluster_code' = i,
'main_code' = i[[1]],
'subcluster' = i[[2]],
'egdes' = this_edges
)
summary_list <- append(summary_list, list(this_summary))
}
for (i in cluster_list) {
sections <- strsplit(i, "-")
tmp <- dataset_minimal %>%
filter(subcluster_label1 == i) %>%
pull("X_N") %>%
as.character()
this_vertices <- which(V(g1)$name %in% tmp)
tg1 <- subgraph(g1, this_vertices)
this_edges <- ecount(tg1)
this_summary <- data.frame(
'cluster_code' = i,
'main_code' = sections[[1]],
'subcluster' = sections[[2]],
'egdes' = this_edges
)
summary_list <- append(summary_list, list(this_summary))
}
summary_df <- rbindlist(summary_list)
summary_list <- list()
for (i in cluster_list) {
sections <- strsplit(i, "-")
tmp <- dataset_minimal %>%
filter(subcluster_label1 == i) %>%
pull("X_N") %>%
as.character()
this_vertices <- which(V(g1)$name %in% tmp)
tg1 <- subgraph(g1, this_vertices)
this_edges <- ecount(tg1)
this_summary <- data.frame(
'cluster_code' = i,
'main_code' = sections[[1]],
'subcluster' = sections[[2]],
'egdes' = this_edges
)
summary_list <- append(summary_list, list(this_summary))
}
summary_df <- rbindlist(summary_list)
summary_list <- list()
for (i in cluster_list) {
sections <- strsplit(i, "-")
tmp <- dataset_minimal %>%
filter(subcluster_label1 == i) %>%
pull("X_N") %>%
as.character()
this_vertices <- which(V(g1)$name %in% tmp)
tg1 <- subgraph(g1, this_vertices)
this_edges <- ecount(tg1)
this_summary <- data.frame(
'cluster_code' = i,
'main_code' = sections[[1]],
'subcluster' = sections[[2]],
'egdes' = this_edges
)
summary_list <- append(summary_list, list(this_summary))
}
summary_list <- list()
for (i in cluster_list) {
sections <- strsplit(i, "-")
tmp <- dataset_minimal %>%
filter(subcluster_label1 == i) %>%
pull("X_N") %>%
as.character()
this_vertices <- which(V(g1)$name %in% tmp)
tg1 <- subgraph(g1, this_vertices)
this_edges <- ecount(tg1)
this_summary <- data.frame(
'cluster_code' = i,
'main_code' = sections[1],
'subcluster' = sections[2],
'egdes' = this_edges
)
summary_list <- append(summary_list, list(this_summary))
}
summary_list <- list()
for (i in cluster_list) {
sections <- strsplit(i, "-")
tmp <- dataset_minimal %>%
filter(subcluster_label1 == i) %>%
pull("X_N") %>%
as.character()
this_vertices <- which(V(g1)$name %in% tmp)
tg1 <- subgraph(g1, this_vertices)
this_edges <- ecount(tg1)
this_summary <- data.frame(
'cluster_code' = i,
'main_code' = sections[[1]][1],
'subcluster' = sections[[1]][2],
'egdes' = this_edges
)
summary_list <- append(summary_list, list(this_summary))
}
summary_df <- rbindlist(summary_list)
View(summary_df)
summary_list <- list()
for (i in cluster_list) {
sections <- strsplit(i, "-")
tmp <- dataset_minimal %>%
filter(subcluster_label1 == i) %>%
pull("X_N") %>%
as.character()
this_vertices <- which(V(g1)$name %in% tmp)
tg1 <- subgraph(g1, this_vertices)
this_edges <- ecount(tg1)
this_summary <- data.frame(
'cluster_code' = i,
'main_code' = sections[[1]][1] %>% as.numeric(),
'subcluster' = sections[[1]][2] %>% as.numeric(),
'egdes' = this_edges
)
summary_list <- append(summary_list, list(this_summary))
}
for (i in cluster_list) {
sections <- strsplit(i, "-")
tmp <- dataset_minimal %>%
filter(subcluster_label1 == i) %>%
pull("X_N") %>%
as.character()
this_vertices <- which(V(g1)$name %in% tmp)
tg1 <- subgraph(g1, this_vertices)
this_edges <- ecount(tg1)
this_summary <- data.frame(
'cluster_code' = i,
'main_cluster' = sections[[1]][1] %>% as.numeric(),
'subcluster' = sections[[1]][2] %>% as.numeric(),
'egdes' = this_edges
)
summary_list <- append(summary_list, list(this_summary))
}
summary_list <- list()
for (i in cluster_list) {
sections <- strsplit(i, "-")
tmp <- dataset_minimal %>%
filter(subcluster_label1 == i) %>%
pull("X_N") %>%
as.character()
this_vertices <- which(V(g1)$name %in% tmp)
tg1 <- subgraph(g1, this_vertices)
this_edges <- ecount(tg1)
this_summary <- data.frame(
'cluster_code' = i,
'main_cluster' = sections[[1]][1] %>% as.numeric(),
'subcluster' = sections[[1]][2] %>% as.numeric(),
'egdes' = this_edges
)
summary_list <- append(summary_list, list(this_summary))
}
summary_df <- rbindlist(summary_list) %>%
arrange(desc(subcluster), desc(main_cluster))
View(summary_df)
summary_df <- rbindlist(summary_list) %>%
arrange(subcluster, main_cluster)
View(summary_df)
summary_df <- rbindlist(summary_list) %>%
arrange(main_cluster, subcluster)
View(summary_df)
write.csv('level1_edges.csv')
write.csv(summary_df, 'level1_edges.csv', row.names = FALSE)
load("~/Library/CloudStorage/GoogleDrive-cristianmejia00@gmail.com/My Drive/Bibliometrics_Drive/Q322_TS_robot_2022_2024/a01_cn__f01_dc__c01_lv/level1/environ.rdata")
# Select the list of clusters
cluster_list <- unique(dataset_minimal$subcluster_label1)
# Compute the edges
summary_list <- list()
for (i in cluster_list) {
sections <- strsplit(i, "-")
tmp <- dataset_minimal %>%
filter(subcluster_label1 == i) %>%
pull("X_N") %>%
as.character()
this_vertices <- which(V(g1)$name %in% tmp)
tg1 <- subgraph(g1, this_vertices)
this_edges <- ecount(tg1)
this_summary <- data.frame(
'cluster_code' = i,
'main_cluster' = sections[[1]][1] %>% as.numeric(),
'subcluster' = sections[[1]][2] %>% as.numeric(),
'egdes' = this_edges
)
summary_list <- append(summary_list, list(this_summary))
}
# Get the edges from a solution file.
# We need the dataset_minimal and g1 objects
network <- readr::read_csv(file.path(analysis_folder_path, "network_comp.csv"))
# Read input files
analysis_folder_path <- file.path(settings$metadata$bibliometrics_folder,
settings$metadata$project_folder,
settings$metadata$analysis_id)
network <- readr::read_csv(file.path(analysis_folder_path, "network_comp.csv"))
g1 <- graph_from_data_frame(network, directed = TRUE)
# Select the list of clusters
cluster_list <- unique(dataset_minimal$subcluster_label1)
# Compute the edges
summary_list <- list()
for (i in cluster_list) {
sections <- strsplit(i, "-")
tmp <- dataset_minimal %>%
filter(subcluster_label1 == i) %>%
pull("X_N") %>%
as.character()
this_vertices <- which(V(g1)$name %in% tmp)
tg1 <- subgraph(g1, this_vertices)
this_edges <- ecount(tg1)
this_summary <- data.frame(
'cluster_code' = i,
'main_cluster' = sections[[1]][1] %>% as.numeric(),
'subcluster' = sections[[1]][2] %>% as.numeric(),
'egdes' = this_edges
)
summary_list <- append(summary_list, list(this_summary))
}
summary_df <- rbindlist(summary_list) %>%
arrange(main_cluster, subcluster)
write.csv(summary_df, 'level1_edges.csv', row.names = FALSE)
load("~/Library/CloudStorage/OneDrive-Personal/Documentos/03-bibliometrics/Q289-r-ce/001/level1/environ_zz_reports.rdata")
colnames(myDataCorrect)
colnames(dataset)
####################################################
# Install packagaes if needed
if (!("tm"          %in% rownames(installed.packages()))) {install.packages("tm")}
if (!("igraph"      %in% rownames(installed.packages()))) {install.packages("igraph")}
if (!("lda"         %in% rownames(installed.packages()))) {install.packages("lda")}
if (!("LDAvis"      %in% rownames(installed.packages()))) {install.packages("LDAvis")}
if (!("servr"       %in% rownames(installed.packages()))) {install.packages("servr")}
if (!("proxy"       %in% rownames(installed.packages()))) {install.packages("proxy")}
if (!("SnowballC"   %in% rownames(installed.packages()))) {install.packages("SnowballC")}
if (!("data.table"  %in% rownames(installed.packages()))) {install.packages("data.table")}
if (!("Rmpfr"       %in% rownames(installed.packages()))) {install.packages("Rmpfr")}
if (!("plyr"        %in% rownames(installed.packages()))) {install.packages("plyr")}
if (!("dplyr"       %in% rownames(installed.packages()))) {install.packages("dplyr")}
if (!("topicmodels" %in% rownames(installed.packages()))) {install.packages("topicmodels")}
if (!("ldatuning"   %in% rownames(installed.packages()))) {install.packages("ldatuning")}
if (!("plotly"      %in% rownames(installed.packages()))) {install.packages("plotly")}
if (!("stringr"     %in% rownames(installed.packages()))) {install.packages("stringr")}
if (!("ngram"       %in% rownames(installed.packages()))) {install.packages("ngram")}
if (!("slam"        %in% rownames(installed.packages()))) {install.packages("slam")}
if (!("Rtsne"       %in% rownames(installed.packages()))) {install.packages("Rtsne")}
if (!("tools"       %in% rownames(installed.packages()))) {install.packages("tools")}
if (!("devtools"    %in% rownames(installed.packages()))) {install.packages("devtools")}
if (!("Opener5"     %in% rownames(installed.packages()))) {
library(devtools)
install_github("cristianmejia00/Opener5")
}
if (!("DT"          %in% rownames(installed.packages()))) {install.packages("DT")}
if (!("glue"        %in% rownames(installed.packages()))) {install.packages("glue")}
if (!("svglite"     %in% rownames(installed.packages()))) {install.packages("svglite")}
if (!("uuid"        %in% rownames(installed.packages()))) {install.packages("uuid")}
####################################################
# Load libraries
library(tm)
library(igraph)
library(lda)
library(LDAvis)
library(servr)
library(proxy)
library(SnowballC)
library(data.table)
# sudo apt-get install libmpfr-dev
library(Rmpfr)
library(plyr)
library(dplyr)
# sudo apt-get install libgsl-dev
library(topicmodels)
library(ldatuning)
# apt-get install r-cran-rjava
#library(qdap)
library(plotly)
library(stringr)
library(ngram)
#library(devtools)
#install_github("cristianmejia00/Opener5")
library(Opener5)
#library(rowr) #Not available for R 3.6.3 (?!) Dont know where it goes.
library(slam)
library(Rtsne)
library(tools)
library(DT)
library(glue)
library(uuid)
myDataCorrect$text <- paste(myDataCorrect$TI, myDataCorrect$AB) %>% tolower()
myDataCorrect$has_manufact <- grepl("manufact", myDataCorrect$text)
myDataCorrect$has_sust_manufact <- grepl("sustainable manufact", myDataCorrect$text)
table(myDataCorrect$level0[myDataCorrect$has_manufact])
table(myDataCorrect$subcluster_label1[myDataCorrect$has_manufact])
table(myDataCorrect$level0[myDataCorrect$has_manufact]) %>% sort(decreasing = TRUE)
table(myDataCorrect$subcluster_label1[myDataCorrect$has_manufact]) %>% sort(decreasing = TRUE)
plot(table(myDataCorrect$level0[myDataCorrect$has_manufact]) %>% sort(decreasing = TRUE))
barplot(table(myDataCorrect$level0[myDataCorrect$has_manufact]) %>% sort(decreasing = TRUE))
barplot(table(myDataCorrect$subcluster_label1[myDataCorrect$has_manufact]) %>% sort(decreasing = TRUE))
?barplot
barplot(table(myDataCorrect$level0[myDataCorrect$has_manufact]) %>% sort(decreasing = TRUE), beside=TRUE)
barplot(table(myDataCorrect$level0[myDataCorrect$has_manufact]) %>% sort(decreasing = TRUE), beside=TRUE)
# ggplot2 solution (often preferred for better aesthetics)
library(ggplot2)
clr <- table(myDataCorrect$level0[myDataCorrect$has_manufact]) %>% sort(decreasing = TRUE)
sclr <- table(myDataCorrect$subcluster_label1[myDataCorrect$has_manufact]) %>% sort(decreasing = TRUE)
# Convert table to data frame
df <- as.data.frame(clr)
names(df) <- c("Cluster", "Papers")
ggplot(df, aes(x = Frequency, y = Category)) +
geom_bar(stat = "identity", fill = "steelblue") +
theme_minimal() +
labs(title = "Concentration of Manufacturing-related research",
x = "Cluster",
y = "Papers") +
theme(axis.text.y = element_text(size = 10))
ggplot(df, aes(x = Papers, y = Cluster)) +
geom_bar(stat = "identity", fill = "steelblue") +
theme_minimal() +
labs(title = "Concentration of Manufacturing-related research",
x = "Cluster",
y = "Papers") +
theme(axis.text.y = element_text(size = 10))
clr <- table(myDataCorrect$level0[myDataCorrect$has_manufact]) %>% sort()
sclr <- table(myDataCorrect$subcluster_label1[myDataCorrect$has_manufact]) %>% sort()
# Convert table to data frame
df <- as.data.frame(clr)
names(df) <- c("Cluster", "Papers")
ggplot(df, aes(x = Papers, y = Cluster)) +
geom_bar(stat = "identity", fill = "steelblue") +
theme_minimal() +
labs(title = "Concentration of Manufacturing-related research",
x = "Cluster",
y = "Papers") +
theme(axis.text.y = element_text(size = 10))
# Convert table to data frame
df <- as.data.frame(sclr)
names(df) <- c("Cluster", "Papers")
ggplot(df, aes(x = Papers, y = Cluster)) +
geom_bar(stat = "identity", fill = "steelblue") +
theme_minimal() +
labs(title = "Concentration of Manufacturing-related research",
x = "Cluster",
y = "Papers") +
theme(axis.text.y = element_text(size = 10))
clr_sust <- table(myDataCorrect$level0[myDataCorrect$has_sust_manufact]) %>% sort()
sclr_sust <- table(myDataCorrect$subcluster_label1[myDataCorrect$has_sust_manufact]) %>% sort()
# Convert table to data frame
df <- as.data.frame(clr_sust)
names(df) <- c("Cluster", "Papers")
ggplot(df, aes(x = Papers, y = Cluster)) +
geom_bar(stat = "identity", fill = "steelblue") +
theme_minimal() +
labs(title = "Concentration of Sustainable Manufacturing-related research",
x = "Cluster",
y = "Papers") +
theme(axis.text.y = element_text(size = 10))
# Convert table to data frame
df <- as.data.frame(sclr_sust)
names(df) <- c("Cluster", "Papers")
ggplot(df, aes(x = Papers, y = Cluster)) +
geom_bar(stat = "identity", fill = "steelblue") +
theme_minimal() +
labs(title = "Concentration of Sustainable Manufacturing-related research",
x = "Cluster",
y = "Papers") +
theme(axis.text.y = element_text(size = 10))
myDataCorrect %>% filter(has_manufact, subcluster_label1 == "2-5---") %>% pull(TI)
?sclice_max
?sclice_top
?slice_max
myDataCorrect %>% filter(has_manufact, subcluster_label1 == "2-5---") %>% slice_max(10, order_by= Z9) %>% pull(TI)
myDataCorrect %>% filter(has_manufact, subcluster_label1 == "2-5---") %>% slice_max(n=10, order_by= Z9) %>% pull(TI)
myDataCorrect %>% filter(has_manufact, subcluster_label1 == "2-5---") %>% slice_max(n=15, order_by= Z9) %>% pull(TI)
library(readr)
article_report <- read_csv("~/Desktop/Ranjit_Rice_Farm/00_Data/article_report.csv")
View(article_report)
library(readr)
scopus <- read_csv("~/Desktop/Ranjit_Rice_Farm/00_Data/scopus.csv")
View(scopus)
library(readr)
scopus <- read_csv("~/Desktop/Ranjit_Rice_Farm/00_Data/scopus.csv")
View(scopus)
dataset_wos <- read_csv("~/Desktop/Ranjit_Rice_Farm/00_Data/article_report.csv")
dataset_scopus <- read_csv("~/Desktop/Ranjit_Rice_Farm/00_Data/scopus.csv")
dataset_scopus$DOI[1:10]
df_scopus$DOI[1:10]
df_wos[1:10]
library(readr)
df_wos <- read_csv("~/Desktop/Ranjit_Rice_Farm/00_Data/article_report.csv")
df_scopus <- read_csv("~/Desktop/Ranjit_Rice_Farm/00_Data/scopus.csv")
df_scopus$DOI[1:10]
df_wos[1:10]
df_wos$DOI[1:10]
df_wos$DOI <- gsub("https://doi.org/10.1016/", "", df_wos$DOI)
df_wos$DOI[1:10]
df_wos <- read_csv("~/Desktop/Ranjit_Rice_Farm/00_Data/article_report.csv")
df_scopus <- read_csv("~/Desktop/Ranjit_Rice_Farm/00_Data/scopus.csv")
df_wos$DOI <- gsub("https://doi.org/", "", df_wos$DOI)
df_scopus$DOI[1:10]
df_wos$DOI[1:10]
df_scopus$in_wos <- df_scopus$DOI %in% df_wos$DOI
table(df_scopus$in_wos)
df_scopus$in_wos_title <- tolower(df_scopus$Title) %in% tolower(df_wos$Title)
df_scopus$in_wos_title <- tolower(df_scopus$Title) %in% tolower(df_wos$Title)
df_scopus$in_wos <- df_scopus$in_wos_doi | df_scopus$in_wos_title
df_scopus$in_wos_doi <- df_scopus$DOI %in% df_wos$DOI
df_scopus$in_wos_title <- tolower(df_scopus$Title) %in% tolower(df_wos$Title)
df_scopus$in_wos <- df_scopus$in_wos_doi | df_scopus$in_wos_title
library(dplyr)
# Filter
new_data <- df_scopus %>% filter(!df_scopus$in_wos)
View(article_report)
colnames(df_wos)
colnames(df_scopus)
View(new_data)
View(new_data)
# Reanme columns as in wos
new_data <- new_data %>% rename(
"Publication Year" = Year,
"Citations" = `Cited by`,
"Journals" = `Source title`,
"ID" = EID,
) %>% mutate(
"Degree" = Citations,
"uuid" = ID,
"Categories" = "",
"Countries" = "",
"Cluster Index" = 0,
"Cluster Code" = "0-0"
) %>% select(
all_of(colnames(df_wos))
)
View(scopus)
View(df_wos)
# Reanme columns as in wos
new_data <- new_data %>% rename(
"Publication Years" = Year,
"Citations" = `Cited by`,
"Journals" = `Source title`,
"ID" = EID,
) %>% mutate(
"Degree" = Citations,
"uuid" = ID,
"Categories" = "",
"Countries" = "",
"Cluster Index" = 0,
"Cluster Code" = "0-0"
) %>% select(
all_of(colnames(df_wos))
)
View(scopus)
View(new_data)
# Bind them
df_all <- df_wos %>% bind_rows(new_data)
# Reanme columns as in wos
new_data <- new_data %>% rename(
"Publication Years" = Year,
"Citations" = `Cited by`,
"Journals" = `Source title`,
"ID" = EID,
) %>% mutate(
"Degree" = Citations,
"uuid" = ID,
"Categories" = "",
"Countries" = "",
"Cluster Index" = 0,
"Cluster Code" = 0
) %>% select(
all_of(colnames(df_wos))
)
# Filter
new_data <- df_scopus %>% filter(!df_scopus$in_wos)
# Reanme columns as in wos
new_data <- new_data %>% rename(
"Publication Years" = Year,
"Citations" = `Cited by`,
"Journals" = `Source title`,
"ID" = EID,
) %>% mutate(
"Degree" = Citations,
"uuid" = ID,
"Categories" = "",
"Countries" = "",
"Cluster Index" = 0,
"Cluster Code" = 0
) %>% select(
all_of(colnames(df_wos))
)
# Bind them
df_all <- df_wos %>% bind_rows(new_data)
View(df_all)
# Write the file for AI processing
write.csv(df_all, file = "dataset_complete.csv", row.names = FALSE)
View(df_all)
table(df_all$`Cluster Code`)
View(df_all)
