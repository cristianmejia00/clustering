##########################################################
# Select root directory
# It should be the directory where this code is placed.
#setwd("/var/container/MAIN TOPIC-CLUSTERING") #Linux
#setwd(choose.dir()) #Windows
getwd()
##########################################################
# Load libraries
source("04_utils/02_libraries.R")
###########################################################################################
# OPTIONS
###########################################################################################
## Select the input folders:
dataset_folder <- choose.dir()
network_folder <- choose.dir()
## Query_id
## This has de form Qxxx whith the query number from the query control file
dataset_metadata <- list("query_id" = "Q249",
"fukan_url" = "https://academic-landscape.com/analysis/47652/0#c0")
###########################################################################################
# RUN FROM HERE
###########################################################################################
## Libraries
source("04_utils/02_libraries.R")
source(file.path(getwd(), "04_utils", "read_from_fukan_function.R"))
## Path to `/inputs`
input_folder <- "C:\\Users\\crist\\OneDrive\\Documentos\\03-bibliometrics"
## Read files
dataset <- read_from_fukan_2(dataset_folder)
orphans <- read_from_fukan_2(dataset_folder, what = "orphans")
network <- fread(paste(network_folder, "\\mission.pairs.tsv", sep = ""), sep = '\t')
## Create directories
dir.create(file.path(input_folder, dataset_metadata$query_id), showWarnings = FALSE)
save(dataset,orphans,dataset_metadata,
file = file.path(input_folder, dataset_metadata$query_id, "dataset.rdata"))
#################################################
# network ncol file
#################################################
'''NOTE:
we want to create the reports based on the Fukan System clusters
# we '''
#################################################
# network ncol file
#################################################
"""NOTE:
we want to create the reports based on the Fukan System clusters
# we"""
## Clear environment
if (file.exists(file.path(input_folder, dataset_metadata$query_id, "dataset.rdata"))) {
#rm(list = (setdiff(ls(), c("dataset", "orphans", "network", "dataset_metadata"))))
rm(list = (ls()))
}
##########################################################
# Select root directory
# It should be the directory where this code (00_general_parameters.R) is placed.
#setwd("/var/container/MAIN TOPIC-CLUSTERING") #Linux
#setwd(choose.dir()) #Windows
getwd()
##########################################################
# Load libraries
source("04_utils/02_libraries.R")
##########################################################
# Input Folder
input_folder <- "C:\\Users\\crist\\OneDrive\\Documentos\\03-bibliometrics"
# Load settings from the project we are interested in
#source(file.choose())
source("settings.R")
##########################################################
# Load data and adjust
load(file.path(input_folder, analysis_metadata$query_id, "dataset.rdata"))
myDataCorrect <- dataset
# facet_dataset <- dataset
#
# myDataCorrect_backup <- myDataCorrect
# dataset_backup <- dataset
##########################################################
# Output Folder
output_folder_reports <- file.path(input_folder, analysis_metadata$query_id, analysis_metadata$project_id) #dataset-analysis
dir.create(output_folder_reports)
##########################################################
# Verify the data is correctly formatted for reports
source(file.path(getwd(), "03_reports", "00_verify_data.R"))
# Reporting clusters PAPERS
if (params$type_of_dataset == "papers") {
source(file.path(getwd(), "02_citation_network", "01_execute_and_reports.R"))
}
View(unified_keywords2)
View(unified_keywords)
View(unified_keywords2)
?write.csv
##########################################################
# Load libraries
source("04_utils/02_libraries.R")
##########################################################
# Input Folder
input_folder <- "C:\\Users\\crist\\OneDrive\\Documentos\\03-bibliometrics"
# Load settings from the project we are interested in
#source(file.choose())
source("settings.R")
##########################################################
# Load data and adjust
load(file.path(input_folder, analysis_metadata$query_id, "dataset.rdata"))
# Special filtering for palm oil news
# dataset$X_C <- dataset$cluster
# dataset$cluster_code <- dataset$cluster
# dataset$X_C_name <- as.character(dataset$X_C)
# dataset$related_topics <- dataset$X_C_name
# dataset <- dataset[dataset$X_C > 0,]
# dataset$X_E <- dataset$score
myDataCorrect <- dataset
# facet_dataset <- dataset
#
# myDataCorrect_backup <- myDataCorrect
# dataset_backup <- dataset
##########################################################
# Output Folder
output_folder_reports <- file.path(input_folder, analysis_metadata$query_id, analysis_metadata$project_id) #dataset-analysis
dir.create(output_folder_reports)
##########################################################
# Verify the data is correctly formatted for reports
source(file.path(getwd(), "03_reports", "00_verify_data.R"))
# Reporting clusters PAPERS
if (params$type_of_dataset == "papers") {
source(file.path(getwd(), "02_citation_network", "01_execute_and_reports.R"))
}
##########################################################
# Select root directory
# It should be the directory where this code (00_general_parameters.R) is placed.
#setwd("/var/container/MAIN TOPIC-CLUSTERING") #Linux
#setwd(choose.dir()) #Windows
getwd()
##########################################################
# Load libraries
source("04_utils/02_libraries.R")
##########################################################
# Input Folder
input_folder <- "C:\\Users\\crist\\OneDrive\\Documentos\\03-bibliometrics"
# Load settings from the project we are interested in
#source(file.choose())
source("settings.R")
##########################################################
# Load data and adjust
load(file.path(input_folder, analysis_metadata$query_id, "dataset.rdata"))
# Special filtering for palm oil news
# dataset$X_C <- dataset$cluster
# dataset$cluster_code <- dataset$cluster
# dataset$X_C_name <- as.character(dataset$X_C)
# dataset$related_topics <- dataset$X_C_name
# dataset <- dataset[dataset$X_C > 0,]
# dataset$X_E <- dataset$score
myDataCorrect <- dataset
# facet_dataset <- dataset
#
# myDataCorrect_backup <- myDataCorrect
# dataset_backup <- dataset
##########################################################
# Output Folder
output_folder_reports <- file.path(input_folder, analysis_metadata$query_id, analysis_metadata$project_id) #dataset-analysis
dir.create(output_folder_reports)
##########################################################
# Verify the data is correctly formatted for reports
source(file.path(getwd(), "03_reports", "00_verify_data.R"))
# Reporting clusters PAPERS
if (params$type_of_dataset == "papers") {
source(file.path(getwd(), "02_citation_network", "01_execute_and_reports.R"))
}
# Reporting clusters NEWS
if (params$type_of_dataset == "news") {
output_folder <- output_folder_reports
source(file.path(getwd(), "02_topic_model", "01_1_execute_and_reports.R"))
}
# Dataset figures
source(file.path(getwd(), "zz-dataset_figures.R"))
# Load plotting library
library(ggplot2)
rp <- data.frame("top_items" = 20)
dir.create(file.path(output_folder_reports, "stats"))
################################################################################
# YEARLY TRENDS
################################################################################
yearly_trends <- dataset$PY %>% as.numeric %>% table %>% data.frame %>% setNames(c("Year", "Articles"))
yearly_trends <- yearly_trends[order(yearly_trends$Year, decreasing = TRUE),]
write.csv(yearly_trends, file=file.path(output_folder_reports, "stats", "data_yearly_trends.csv"), row.names = FALSE)
ggplot(yearly_trends[1:15,], aes(x=Year, y=Articles)) +
geom_bar(stat = "identity", width = 0.7, fill = "deepskyblue3") #+ #+ #, color = "black", fill = "white") +
#theme_classic()
#theme(axis.text=element_text(size=14))
#coord_flip() +
#scale_x_discrete(limits=rev)
ggsave(file.path(output_folder_reports, "stats", "fig_yearly_trends.jpg"))
################################################################################
# CLUSTER SIZE
################################################################################
stats_size <- dataset$level0 %>% table %>% data.frame() %>% setNames(c("Cluster", "Articles"))
View(yearly_trends)
View(dataset)
################################################################################
# CLUSTER SIZE
################################################################################
# Sometimes 'X_C' others 'level0'?
stats_size <- dataset$X_C %>% table %>% data.frame() %>% setNames(c("Cluster", "Articles"))
write.csv(stats_size, file=file.path(output_folder_reports, "stats", "data_cluster_size.csv"), row.names = FALSE)
ggplot(stats_size, aes(x=Cluster, y=Articles)) +
geom_bar(stat = "identity", width = 0.7, fill = "deepskyblue3") + #, color = "black", fill = "white") +
#theme(axis.text=element_text(size=14)) +
coord_flip() +
scale_x_discrete(limits=rev)
ggsave(file.path(output_folder_reports, "stats", "fig_cluster_size_h.jpg"))
ggplot(stats_size, aes(x=Cluster, y=Articles)) +
geom_bar(stat = "identity", width = 0.7, fill = "deepskyblue3") #+ #, color = "black", fill = "white") +
#theme(axis.text=element_text(size=14))
#coord_flip() +
#scale_x_discrete(limits=rev)
ggsave(file.path(output_folder_reports, "stats", "fig_cluster_size_v.jpg"))
################################################################################
# JOURNALS
################################################################################
stats_journals <- dataset$SO %>% as.character %>% tolower %>% toTitleCase %>% table %>% sort(decreasing = TRUE) %>% data.frame() %>% setNames(c("Journals", "Articles"))
write.csv(stats_journals, file=file.path(output_folder_reports, "stats", "data_journals.csv"), row.names = FALSE)
ggplot(stats_journals[c(1:rp$top_items),], aes(x=Journals, y=Articles)) +
geom_bar(stat = "identity", width = 0.7, fill = "deepskyblue3") + #, color = "black", fill = "white") +
theme(axis.text=element_text(size=14)) +
coord_flip() +
scale_x_discrete(limits=rev)
ggsave(file.path(output_folder_reports, "stats", "fig_journals.jpg"))
################################################################################
# COUNTRIES
################################################################################
dataset$Countries <- getCountries(dataset$C1)
stats_regions <- dataset$Countries %>% strsplit("; ") %>% unlist %>% tolower %>% toTitleCase %>% gsub("Usa", "USA", .) %>% table %>% sort(decreasing = TRUE) %>% data.frame() %>% setNames(c("Regions", "Articles"))
write.csv(stats_regions, file=file.path(output_folder_reports, "stats", "data_regions.csv"), row.names = FALSE)
ggplot(stats_regions[c(1:rp$top_items),], aes(x=Regions, y=Articles)) +
geom_bar(stat = "identity", width = 0.7, fill = "deepskyblue3") + #, color = "black", fill = "white") +
theme(axis.text=element_text(size=14)) +
coord_flip() +
scale_x_discrete(limits=rev)
ggsave(file.path(output_folder_reports, "stats", "fig_regions.jpg"))
################################################################################
# Institutions
################################################################################
if ("Institutions" %in% colnames(dataset)) {
stats_institutions <- dataset$Institutions %>% tolower %>%  strsplit("; ") %>% unlist %>% toTitleCase  %>% gsub("Inst", "Inst.", .) %>% gsub("Univ", "Univ.", .) %>% table %>% .[!grepl("^Na$", names(.))] %>% sort(decreasing = TRUE) %>% data.frame() %>% setNames(c("Organizations", "Articles"))
write.csv(stats_institutions, file=file.path(output_folder_reports, "stats", "data_organizations.csv"), row.names = FALSE)
ggplot(stats_institutions[c(1:rp$top_items),], aes(x=Organizations, y=Articles)) +
geom_bar(stat = "identity", width = 0.7, fill = "deepskyblue3") +
theme(axis.text=element_text(size=14)) +
coord_flip() +
scale_x_discrete(limits=rev)
ggsave(file.path(output_folder_reports, "stats", "fig_organizations.jpg"))
}
################################################################################
# CATEGORIES (or Patent IPC)
################################################################################
if ("WC" %in% colnames(dataset)) {
stats_WC <- dataset$WC %>% tolower %>%  strsplit("; ") %>% unlist %>% toTitleCase %>% table %>% sort(decreasing = TRUE) %>% data.frame() %>% setNames(c("Categories", "Articles"))
write.csv(stats_WC, file=file.path(output_folder_reports, "stats", "data_categories.csv"), row.names = FALSE)
ggplot(stats_WC[c(1:rp$top_items),], aes(x=Categories, y=Articles)) +
geom_bar(stat = "identity", width = 0.7, fill = "deepskyblue3") +
theme(axis.text=element_text(size=14)) +
coord_flip() +
scale_x_discrete(limits=rev)
ggsave(file.path(output_folder_reports, "stats", "fig_categories.jpg"))
}
################################################################################
# KEYWORDS (or Factiva topics)
################################################################################
if ("DE" %in% colnames(dataset)) {
stats_DE <- dataset$DE %>% tolower %>% strsplit("; ") %>% unlist %>% toTitleCase %>% table %>% sort(decreasing = TRUE) %>% data.frame() %>% setNames(c("Keywords", "Articles"))
#if (params$type_of_dataset == "news") { setnames(stats_DE, c("Keywords", "Articles"), c("Topic", "News"))}
write.csv(stats_DE, file=file.path(output_folder_reports, "stats", "data_keywords.csv"), row.names = FALSE)
ggplot(stats_DE[c(1:rp$top_items),], aes(x=Keywords, y=Articles)) +
geom_bar(stat = "identity", width = 0.7, fill = "deepskyblue3") + #, color = "black", fill = "white") +
theme(axis.text=element_text(size=14)) +
coord_flip() +
scale_x_discrete(limits=rev)
ggsave(file.path(output_folder_reports, "stats", "fig_keywords.jpg"))
}
################################################################################
# Authors (or Factiva types, or Patents inventors)
################################################################################
if ("AU" %in% colnames(dataset)) {
stats_AU <- dataset$AU %>% toupper %>% strsplit("; ") %>% unlist %>% toTitleCase %>% table %>% sort(decreasing = TRUE) %>% data.frame() %>% setNames(c("Authors", "Articles"))
#if (params$type_of_dataset == "news") { setnames(stats_DE, c("Authors", "Articles"), c("Types", "News"))}
#if (params$type_of_dataset == "patents") { setnames(stats_DE, c("Authors", "Articles"), c("Inventors", "Patents"))}
write.csv(stats_AU, file=file.path(output_folder_reports, "stats", "data_authors.csv"), row.names = FALSE)
ggplot(stats_AU[c(1:rp$top_items),], aes(x=Authors, y=Articles)) +
geom_bar(stat = "identity", width = 0.7, fill = "deepskyblue3") + #, color = "black", fill = "white") +
theme(axis.text=element_text(size=14)) +
coord_flip() +
scale_x_discrete(limits=rev)
ggsave(file.path(output_folder_reports, "stats", "fig_authors.jpg"))
}
##########################################################
# Load libraries
source("04_utils/02_libraries.R")
# Input Folder
input_folder <- "C:\\Users\\crist\\OneDrive\\Documentos\\03-bibliometrics"
# Load data
load(file.path(input_folder, analysis_metadata$query_id, "dataset.rdata"))
##########################################################
# Load libraries
source("04_utils/02_libraries.R")
# Input Folder
input_folder <- "C:\\Users\\crist\\OneDrive\\Documentos\\03-bibliometrics"
# Load input settings file
source("settings.R")
# Load input settings file
source("settings.R")
# Load data
load(file.path(input_folder, analysis_metadata$query_id, "dataset.rdata"))
##########################################################
# Select root directory
# It should be the directory where this code is placed.
#setwd("/var/container/MAIN TOPIC-CLUSTERING") #Linux
#setwd(choose.dir()) #Windows
getwd()
##########################################################
# Load libraries
source("04_utils/02_libraries.R")
# Input Folder
input_folder <- "C:\\Users\\crist\\OneDrive\\Documentos\\03-bibliometrics"
# Load input settings file
source("settings.R")
# Load data
load(file.path(input_folder, analysis_metadata$query_id, "dataset.rdata"))
##########################################################
# Document classification (Get clusters or Get topics)
if (params$type_of_analysis == "citation_network") {
source(file.path(getwd(), "02_citation_network", "00_citation_network_clustering.R"))
}
View(dataset_minimal)
table(dataset$level0)
table(dataset_minimal$level0)
cno$threshold
cno$threshold <- 27
cno$threshold
# The following is used when in `settings` we chose an Integer for the exact number of cluster.
# Here, we convert the integer to a value between 0 and 1 representing the PROPORTION of clusters to take
# This is needed because the clustering algorithm is designed to take a value from 0 to 1.
if (cno$threshold > 1) {
tmp_prop <- table(dataset$X_C) %>% sort(decreasing = TRUE) %>% prop.table %>% cumsum
tmp_prop <- tmp_prop[cno$threshold]
cno$threshold <- cno$threshold + cno$threshold * 0.1
}
cno$threshold
# The following is used when in `settings` we chose an Integer for the exact number of cluster.
# Here, we convert the integer to a value between 0 and 1 representing the PROPORTION of clusters to take
# This is needed because the clustering algorithm is designed to take a value from 0 to 1.
if (cno$threshold > 1) {
tmp_prop <- table(dataset$X_C) %>% sort(decreasing = TRUE) %>% prop.table %>% cumsum
tmp_prop <- tmp_prop[cno$threshold]
cno$threshold <- cno$threshold + cno$threshold * 0.1
}
cno$threshold <- 27
tmp_prop <- table(dataset$X_C) %>% sort(decreasing = TRUE) %>% prop.table %>% cumsum
tmp_prop <- tmp_prop[cno$threshold]
cno$threshold <- tmp_prop + tmp_prop * 0.1
cno$threshold
cno$threshold <- tmp_prop + tmp_prop * 0.0001
cno$threshold <- 27
tmp_prop <- table(dataset$X_C) %>% sort(decreasing = TRUE) %>% prop.table %>% cumsum
tmp_prop <- tmp_prop[cno$threshold]
cno$threshold <- tmp_prop + tmp_prop * 0.0001
cno$threshold
##########################################################
# Load libraries
source("04_utils/02_libraries.R")
# Input Folder
input_folder <- "C:\\Users\\crist\\OneDrive\\Documentos\\03-bibliometrics"
##########################################################
# Load libraries
source("04_utils/02_libraries.R")
# Input Folder
input_folder <- "C:\\Users\\crist\\OneDrive\\Documentos\\03-bibliometrics"
# Load input settings file
source("settings.R")
##########################################################
# Select root directory
# It should be the directory where this code is placed.
#setwd("/var/container/MAIN TOPIC-CLUSTERING") #Linux
#setwd(choose.dir()) #Windows
getwd()
