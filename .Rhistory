settings$analysis_metadata$project_folder,
settings$analysis_metadata$analysis_folder)
dir.create(output_folder_reports)
##########################################################
# Load data
load(file.path(
settings$analysis_metadata$bibliometrics_folder,
settings$analysis_metadata$project_folder,
settings$analysis_metadata$analysis_folder,
"dataset_clustering.rdata"
))
##########################################################
# Verify the data is correctly formatted for reports
source(file.path(getwd(), "04_utils", "00_verify_data.R"))
zz_env <- list('x01' = ls())
# Reporting clusters
source(file.path(getwd(), "02_citation_network", "01_execute_and_reports.R"))
View(dataset)
table(dataset$fukan_X_C, dataset$X_C)
sapply(c(2:length(tmp)), function(x) {tmp[x] <= tmp[x-1]})
tmp <- table(dataset$X_C)
sapply(c(2:length(tmp)), function(x) {tmp[x] <= tmp[x-1]})
tmp <- table(dataset$fukan_X_C)
sapply(c(2:length(tmp)), function(x) {tmp[x] <= tmp[x-1]})
sapply(c(2:length(tmp)), function(x) {tmp[x] <= tmp[x-1]}) |> all()
table(dataset$fukan_X_C) |> sort(decreasing = TRUE)
tmp <- table(dataset$fukan_X_C) |> sort(decreasing = TRUE)
tmp[2]
match(20, names(tmp))
###########################################################################################
# OPTIONS
###########################################################################################
## Select the input folders:
dataset_folder <- choose.dir()
## Query_id
## This has de form Qxxx whith the query number from the query control file
dataset_metadata <- list("query_id" = "Q281",
"fukan_url" = "https://academic-landscape.com/analysis/48185/1#c0")
###########################################################################################
# RUN FROM HERE
###########################################################################################
## Libraries
source("04_utils/02_libraries.R")
source(file.path(getwd(), "04_utils", "read_from_fukan_function.R"))
## Path to `/inputs`
# Here 'input' refer to the inputs for clustering.
# From the pov of this very code, this is actually the output folder. Where the files generated by this code will be placed.
bibliometrics_folder <- "C:\\Users\\crist\\OneDrive\\Documentos\\03-bibliometrics"
## Read files
dataset <- read_from_fukan_2(dataset_folder)
orphans <- read_from_fukan_2(dataset_folder, what = "orphans")
library(glue)
fukan_clusters <- table(dataset$X_C)
initial_cluster <- 1
final_cluster <- 12
total_clusters <- 22
main_cluster <- initial_cluster
sub_cluster <- 1
sub_cluster_labels <- c('1-1')
for (j in c(2: length(fukan_clusters))) {
if (fukan_clusters[j] <= fukan_clusters[j-1] &
main_cluster <= final_cluster) {
main_cluster <- main_cluster
sub_cluster <- sub_cluster + 1
} else {
main_cluster <- main_cluster + 1
if (main_cluster <= final_cluster) {
sub_cluster <- 1
} else {
sub_cluster <- 0
}
}
sub_cluster_labels <- c(sub_cluster_labels, glue("{main_cluster}-{sub_cluster}"))
print(glue("{main_cluster}-{sub_cluster}"))
}
sub_cluster_labels
dataset$fukan_subcluster_label <- sub_cluster_labels[dataset$X_C]
table(dataset$fukan_subcluster_label, dataset$X_C)
# reorder clusters from largest like in cluster 0
tmp <- table(dataset$X_C)
sapply(c(2:length(tmp)), function(x) {tmp[x] <= tmp[x-1]}) |> all()
tmp <- table(dataset$fukan_X_C) |> sort(decreasing = TRUE)
dataset$fukan_original_cluster_id <- dataset$X_C
dataset$X_C <- match(dataset$X_C, names(tmp))
table(dataset$X_C)
View(dataset)
## Read files
dataset <- read_from_fukan_2(dataset_folder)
orphans <- read_from_fukan_2(dataset_folder, what = "orphans")
library(glue)
fukan_clusters <- table(dataset$X_C)
initial_cluster <- 1
final_cluster <- 12
total_clusters <- 22
main_cluster <- initial_cluster
sub_cluster <- 1
sub_cluster_labels <- c('1-1')
for (j in c(2: length(fukan_clusters))) {
if (fukan_clusters[j] <= fukan_clusters[j-1] &
main_cluster <= final_cluster) {
main_cluster <- main_cluster
sub_cluster <- sub_cluster + 1
} else {
main_cluster <- main_cluster + 1
if (main_cluster <= final_cluster) {
sub_cluster <- 1
} else {
sub_cluster <- 0
}
}
sub_cluster_labels <- c(sub_cluster_labels, glue("{main_cluster}-{sub_cluster}"))
print(glue("{main_cluster}-{sub_cluster}"))
}
sub_cluster_labels
dataset$fukan_subcluster_label <- sub_cluster_labels[dataset$X_C]
table(dataset$fukan_subcluster_label, dataset$X_C)
# reorder clusters from largest like in cluster 0
tmp <- table(dataset$X_C)
sapply(c(2:length(tmp)), function(x) {tmp[x] <= tmp[x-1]}) |> all()
tmp <- table(dataset$fukan_X_C) |> sort(decreasing = TRUE)
tmp <- table(dataset$X_C) |> sort(decreasing = TRUE)
dataset$fukan_original_cluster_id <- dataset$X_C
dataset$X_C <- match(dataset$X_C, names(tmp))
table(dataset$X_C)
View(dataset)
## Create directories
dir.create(file.path(bibliometrics_folder, dataset_metadata$query_id), showWarnings = FALSE)
save(dataset,orphans,dataset_metadata,
file = file.path(bibliometrics_folder, dataset_metadata$query_id, "dataset.rdata"))
## Create directories
save(dataset,orphans,network,dataset_metadata,
file = file.path(bibliometrics_folder, dataset_metadata$query_id, "dataset.rdata"))
## Clear environment
if (file.exists(file.path(bibliometrics_folder, dataset_metadata$query_id, "dataset.rdata"))) {
#rm(list = (setdiff(ls(), c("dataset", "orphans", "network", "dataset_metadata"))))
rm(list = (ls()))
}
##########################################################
# Load libraries
source("04_utils/02_libraries.R")
# Load input settings file
source("settings.R")
# Load data
load(file.path(
settings$analysis_metadata$bibliometrics_folder,
settings$analysis_metadata$project_folder,
"dataset.rdata"
))
##########################################################
# Document classification (Get clusters or Get topics)
if (settings$params$type_of_analysis == "citation_network") {
source(file.path(getwd(), "02_citation_network", "00_citation_network_clustering.R"))
}
if (settings$params$type_of_analysis == "topic_model") {
source(file.path(getwd(), "02_topic_model", "00_topic_model_clustering.R"))
}
# Create stats folder
dir.create(file.path(
settings$analysis_metadata$bibliometrics_folder,
settings$analysis_metadata$project_folder,
settings$analysis_metadata$analysis_folder
))
source(file.path(getwd(), "03_reports", "03_general_summary.R"))
# Orphans treatment
if (settings$addons$include_orphans == "99" | settings$addons$include_orphans == "999") {
source(file.path(getwd(), "04_utils", "zz-append_orphans.R"))
}
# Add-ons
if (settings$params$type_of_analysis == "citation_network" &
exists('g1') &
(settings$addons$page_rank | settings$addons$eigen_centrality | settings$addons$closeness_centrality | settings$addons$betweeness_centrality)) {
source(file.path(getwd(), "04_utils", "zz-centrality_meassures.R"))
}
##########################################################
# save objects
if (settings$params$type_of_analysis == "topic_model") {
dataset <- myDataCorrect
}
if (settings$params$type_of_analysis == "citation_network") {
dataset <- merge(dataset, dataset_minimal[, c("X_N", "level0")])
setnames(dataset, "X_C", "fukan_X_C")
setnames(dataset, "level0", "X_C")
}
save(dataset, file = file.path(settings$analysis_metadata$bibliometrics_folder,
settings$analysis_metadata$project_folder,
settings$analysis_metadata$analysis_folder,
"dataset_clustering.rdata"))
save.image(file.path(settings$analysis_metadata$bibliometrics_folder,
settings$analysis_metadata$project_folder,
settings$analysis_metadata$analysis_folder,
"environ_clustering.rdata"))
rm(list = ls())
##########################################################
# Load libraries
source("04_utils/02_libraries.R")
# Load settings from the project we are interested in
# source(file.choose())
source("settings.R")
##########################################################
# Output Folder
output_folder_reports <- file.path(settings$analysis_metadata$bibliometrics_folder,
settings$analysis_metadata$project_folder,
settings$analysis_metadata$analysis_folder)
dir.create(output_folder_reports)
##########################################################
# Load data
load(file.path(
settings$analysis_metadata$bibliometrics_folder,
settings$analysis_metadata$project_folder,
settings$analysis_metadata$analysis_folder,
"dataset_clustering.rdata"
))
##########################################################
# Verify the data is correctly formatted for reports
source(file.path(getwd(), "04_utils", "00_verify_data.R"))
zz_env <- list('x01' = ls())
# Reporting clusters
source(file.path(getwd(), "02_citation_network", "01_execute_and_reports.R"))
# Dataset merged RCS
source(file.path(getwd(), "03_reports", "15_rcs_merged.R"))
# figures
# Save PNG figures. Normal raster figures for easy navigation in PC.
extension <- 'png'
subfolder_dataset <- "charts_dataset"
subfolder_clusters <- "charts_clusters"
source(file.path(getwd(), "zz-charts_dataset.R"))
source(file.path(getwd(), "zz-charts_clusters_stats1.R"))
source(file.path(getwd(), "zz-charts_clusters_stats2.R"))
source(file.path(getwd(), "zz-charts_clusters_stats3.R"))
source(file.path(getwd(), "zz-charts_clusters_stats4.R"))
source(file.path(getwd(), "zz-charts_clusters_scatterplots.R"))
source(file.path(getwd(), "zz-charts_trends_and_clustered_bars.R"))
# Save PNG figures. Needed for notebook.
extension <- 'svg'
subfolder_dataset <- "index_files/charts"
subfolder_clusters <- "index_files/charts"
source(file.path(getwd(), "zz-charts_dataset.R"))
source(file.path(getwd(), "zz-charts_clusters_stats1.R"))
source(file.path(getwd(), "zz-charts_clusters_stats2.R"))
source(file.path(getwd(), "zz-charts_clusters_stats3.R"))
source(file.path(getwd(), "zz-charts_clusters_stats4.R"))
source(file.path(getwd(), "zz-charts_clusters_scatterplots.R"))
source(file.path(getwd(), "zz-charts_trends_and_clustered_bars.R"))
# Save code snapshot
files_to_save <- list.files(getwd(), full.names = TRUE, recursive = TRUE)
files_to_omit <- list.files(file.path(getwd(),'renv','library'), full.names = TRUE, recursive = TRUE)
files_to_save <- setdiff(files_to_save, files_to_omit)
# Not to zip Rdata environments as they are heavy and saved separately
files_to_save <- files_to_save[!grepl('rdata$', tolower(files_to_save))]
# Zip them. This needs Rtools to work
zip(zipfile = file.path(output_folder_level, 'source_code'),
files = files_to_save)
# Save readable settings
writeLines(RJSONIO::toJSON(settings, pretty=TRUE, auto_unbox=TRUE),
file.path(output_folder_level, "settings.json"))
# Save settings object
save(settings, file = file.path(output_folder_level, "settings.rdata"))
# Save package list
session_info <- sessionInfo()
save(session_info, file = file.path(output_folder_level, "sessionInfo.rdata"))
writeLines(capture.output(sessionInfo()), file.path(output_folder_level, "sessionInfo.txt"))
# Save Global environment
save.image(file.path(output_folder_level, "environ_zz_reports.rdata"))
View(dataset)
cluster_comparison <- dataset[c('fukan_x_c', 'X_C', 'fukan_original_cluster_id', 'fukan_subclutser')]
colnames(dataset)
cluster_comparison <- dataset[c('fukan_X_C', 'X_C', 'fukan_original_cluster_id', 'fukan_subclutser')]
cluster_comparison <- dataset[c('X_C', 'fukan_X_C', 'fukan_original_cluster_id', 'fukan_subcluster_label')]
cluster_comparison <- cluster_comparison[!duplicated(cluster_comparison$fukan_subcluster_label),]
cluster_comparison <- cluster_comparison[order(cluster_comparison$fukan_X_C),]
write.csv(cluster_comparison, file = file.path(output_folder_level, "cluster_id_comparison.csv"), row.names = FALSE)
write.csv(cluster_comparison, file = file.path(output_folder_level, "cluster_id_comparison.csv"), row.names = FALSE)
###########################################################################################
# OPTIONS
###########################################################################################
## Select the input folders:
dataset_folder <- choose.dir()
## Query_id
## This has de form Qxxx whith the query number from the query control file
dataset_metadata <- list("query_id" = "Q282",
"fukan_url" = "https://academic-landscape.com/analysis/48186/1#c0")
###########################################################################################
# RUN FROM HERE
###########################################################################################
## Libraries
source("04_utils/02_libraries.R")
source(file.path(getwd(), "04_utils", "read_from_fukan_function.R"))
## Path to `/inputs`
# Here 'input' refer to the inputs for clustering.
# From the pov of this very code, this is actually the output folder. Where the files generated by this code will be placed.
bibliometrics_folder <- "C:\\Users\\crist\\OneDrive\\Documentos\\03-bibliometrics"
## Read files
dataset <- read_from_fukan_2(dataset_folder)
orphans <- read_from_fukan_2(dataset_folder, what = "orphans")
library(glue)
fukan_clusters <- table(dataset$X_C)
total_clusters <- length(fukan_clusters)
main_cluster <- initial_cluster
sub_cluster <- 1
sub_cluster_labels <- c('1-1')
for (j in c(2: length(fukan_clusters))) {
if (fukan_clusters[j] <= fukan_clusters[j-1] &
main_cluster <= final_cluster) {
main_cluster <- main_cluster
sub_cluster <- sub_cluster + 1
} else {
main_cluster <- main_cluster + 1
if (main_cluster <= final_cluster) {
sub_cluster <- 1
} else {
sub_cluster <- 0
}
}
sub_cluster_labels <- c(sub_cluster_labels, glue("{main_cluster}-{sub_cluster}"))
print(glue("{main_cluster}-{sub_cluster}"))
}
initial_cluster <- 1
final_cluster <- 26
total_clusters <- length(fukan_clusters)
main_cluster <- initial_cluster
sub_cluster <- 1
sub_cluster_labels <- c('1-1')
for (j in c(2: length(fukan_clusters))) {
if (fukan_clusters[j] <= fukan_clusters[j-1] &
main_cluster <= final_cluster) {
main_cluster <- main_cluster
sub_cluster <- sub_cluster + 1
} else {
main_cluster <- main_cluster + 1
if (main_cluster <= final_cluster) {
sub_cluster <- 1
} else {
sub_cluster <- 0
}
}
sub_cluster_labels <- c(sub_cluster_labels, glue("{main_cluster}-{sub_cluster}"))
print(glue("{main_cluster}-{sub_cluster}"))
}
sub_cluster_labels
dataset$fukan_subcluster_label <- sub_cluster_labels[dataset$X_C]
table(dataset$fukan_subcluster_label, dataset$X_C)
# reorder clusters from largest like in cluster 0
tmp <- table(dataset$X_C)
if (!(sapply(c(2:length(tmp)), function(x) {tmp[x] <= tmp[x-1]}) |> all())) {
tmp <- table(dataset$X_C) |> sort(decreasing = TRUE)
dataset$fukan_original_cluster_id <- dataset$X_C
dataset$X_C <- match(dataset$X_C, names(tmp))
}
# Verify clusters are ordered from the largest
table(dataset$X_C)
## Create directories
dir.create(file.path(bibliometrics_folder, dataset_metadata$query_id), showWarnings = FALSE)
save(dataset,orphans,dataset_metadata,
file = file.path(bibliometrics_folder, dataset_metadata$query_id, "dataset.rdata"))
## Clear environment
if (file.exists(file.path(bibliometrics_folder, dataset_metadata$query_id, "dataset.rdata"))) {
#rm(list = (setdiff(ls(), c("dataset", "orphans", "network", "dataset_metadata"))))
rm(list = (ls()))
}
## Metadata
settings$analysis_metadata <- list(
# Directory path
bibliometrics_folder = "C:\\Users\\crist\\OneDrive\\Documentos\\03-bibliometrics",
project_folder = "Q282",
analysis_folder = "001", # Equivalent to Fukan's analysis (i.e. the order inside dataset)
# Query and data
query = 'See Q282 Riken',
query_id = "Q282", # This is the Folder name. Equivalent to Fukan's dataset
fukan_url = "https://academic-landscape.com/analysis/48186/1#c0",
downloaded_documents = "17018",
# project
project_name = "RIKEN",
project_description = "Citation Network of PIK",
date = "2023-09-19",
created_by = "cristianmejia00@gmail.com",
notes = "NA"
)
##########################################################
# Select root directory
# It should be the directory where this code is placed.
# setwd("/var/container/MAIN TOPIC-CLUSTERING") #Linux
# setwd(choose.dir()) #Windows
getwd()
##########################################################
# Load libraries
source("04_utils/02_libraries.R")
# Load input settings file
source("settings.R")
# Load data
load(file.path(
settings$analysis_metadata$bibliometrics_folder,
settings$analysis_metadata$project_folder,
"dataset.rdata"
))
##########################################################
# Document classification (Get clusters or Get topics)
if (settings$params$type_of_analysis == "citation_network") {
source(file.path(getwd(), "02_citation_network", "00_citation_network_clustering.R"))
}
if (settings$params$type_of_analysis == "topic_model") {
source(file.path(getwd(), "02_topic_model", "00_topic_model_clustering.R"))
}
# Create stats folder
dir.create(file.path(
settings$analysis_metadata$bibliometrics_folder,
settings$analysis_metadata$project_folder,
settings$analysis_metadata$analysis_folder
))
source(file.path(getwd(), "03_reports", "03_general_summary.R"))
# Orphans treatment
if (settings$addons$include_orphans == "99" | settings$addons$include_orphans == "999") {
source(file.path(getwd(), "04_utils", "zz-append_orphans.R"))
}
# Add-ons
if (settings$params$type_of_analysis == "citation_network" &
exists('g1') &
(settings$addons$page_rank | settings$addons$eigen_centrality | settings$addons$closeness_centrality | settings$addons$betweeness_centrality)) {
source(file.path(getwd(), "04_utils", "zz-centrality_meassures.R"))
}
##########################################################
# save objects
if (settings$params$type_of_analysis == "topic_model") {
dataset <- myDataCorrect
}
if (settings$params$type_of_analysis == "citation_network") {
dataset <- merge(dataset, dataset_minimal[, c("X_N", "level0")])
setnames(dataset, "X_C", "fukan_X_C")
setnames(dataset, "level0", "X_C")
}
save(dataset, file = file.path(settings$analysis_metadata$bibliometrics_folder,
settings$analysis_metadata$project_folder,
settings$analysis_metadata$analysis_folder,
"dataset_clustering.rdata"))
save.image(file.path(settings$analysis_metadata$bibliometrics_folder,
settings$analysis_metadata$project_folder,
settings$analysis_metadata$analysis_folder,
"environ_clustering.rdata"))
rm(list = ls())
##########################################################
# Select root directory
# It should be the directory where this code (00_general_parameters.R) is placed.
# setwd("/var/container/MAIN TOPIC-CLUSTERING") #Linux
# setwd(choose.dir()) #Windows
getwd()
##########################################################
# Load libraries
source("04_utils/02_libraries.R")
# Load settings from the project we are interested in
# source(file.choose())
source("settings.R")
##########################################################
# Output Folder
output_folder_reports <- file.path(settings$analysis_metadata$bibliometrics_folder,
settings$analysis_metadata$project_folder,
settings$analysis_metadata$analysis_folder)
dir.create(output_folder_reports)
##########################################################
# Load data
load(file.path(
settings$analysis_metadata$bibliometrics_folder,
settings$analysis_metadata$project_folder,
settings$analysis_metadata$analysis_folder,
"dataset_clustering.rdata"
))
##########################################################
# Verify the data is correctly formatted for reports
source(file.path(getwd(), "04_utils", "00_verify_data.R"))
zz_env <- list('x01' = ls())
# Reporting clusters
source(file.path(getwd(), "02_citation_network", "01_execute_and_reports.R"))
# Dataset merged RCS
source(file.path(getwd(), "03_reports", "15_rcs_merged.R"))
# figures
# Save PNG figures. Normal raster figures for easy navigation in PC.
extension <- 'png'
subfolder_dataset <- "charts_dataset"
subfolder_clusters <- "charts_clusters"
source(file.path(getwd(), "zz-charts_dataset.R"))
source(file.path(getwd(), "zz-charts_clusters_stats1.R"))
source(file.path(getwd(), "zz-charts_clusters_stats2.R"))
source(file.path(getwd(), "zz-charts_clusters_stats3.R"))
source(file.path(getwd(), "zz-charts_clusters_stats4.R"))
source(file.path(getwd(), "zz-charts_clusters_scatterplots.R"))
source(file.path(getwd(), "zz-charts_trends_and_clustered_bars.R"))
# Save code snapshot
files_to_save <- list.files(getwd(), full.names = TRUE, recursive = TRUE)
files_to_omit <- list.files(file.path(getwd(),'renv','library'), full.names = TRUE, recursive = TRUE)
files_to_save <- setdiff(files_to_save, files_to_omit)
# Not to zip Rdata environments as they are heavy and saved separately
files_to_save <- files_to_save[!grepl('rdata$', tolower(files_to_save))]
# Zip them. This needs Rtools to work
zip(zipfile = file.path(output_folder_level, 'source_code'),
files = files_to_save)
# Save readable settings
writeLines(RJSONIO::toJSON(settings, pretty=TRUE, auto_unbox=TRUE),
file.path(output_folder_level, "settings.json"))
# Save settings object
save(settings, file = file.path(output_folder_level, "settings.rdata"))
# Save package list
session_info <- sessionInfo()
save(session_info, file = file.path(output_folder_level, "sessionInfo.rdata"))
writeLines(capture.output(sessionInfo()), file.path(output_folder_level, "sessionInfo.txt"))
# Save Global environment
save.image(file.path(output_folder_level, "environ_zz_reports.rdata"))
# Save cluster IDS
if ('fukan_original_cluster_id' %in% colnames(dataset)) {
print('Saving cluster id comparison for subclusters')
cluster_comparison <- dataset[c('X_C', 'fukan_X_C', 'fukan_original_cluster_id', 'fukan_subcluster_label')]
cluster_comparison <- cluster_comparison[!duplicated(cluster_comparison$fukan_subcluster_label),]
cluster_comparison <- cluster_comparison[order(cluster_comparison$fukan_X_C),]
write.csv(cluster_comparison, file = file.path(output_folder_level, "cluster_id_comparison.csv"), row.names = FALSE)
}
