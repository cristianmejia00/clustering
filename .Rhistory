} else {
return(paste("Error:", response$status_code))
}
}
##########################################################
##########################################################
##########################################################
# Libraries
library(reticulate)
library(glue)
# Activate enviroment
reticulate::use_condaenv('openai_env')
save.image("~/Library/CloudStorage/GoogleDrive-cristianmejia00@gmail.com/My Drive/PIK-RIKEN/env20240928.RData")
View(dataset)
View(rcs_merged)
library(readr)
article_report <- read_csv("~/Library/CloudStorage/OneDrive-Personal/Documentos/03-bibliometrics/Q302 human augmentation (core)/001/level0/article_report.csv")
View(article_report)
article_report_core <- article_report
library(readr)
article_report_citing0 <- read_csv("~/Library/CloudStorage/OneDrive-Personal/Documentos/03-bibliometrics/Q303/001/level0/article_report.csv")
View(article_report_citing0)
library(readr)
article_report_citing1 <- read_csv("~/Library/CloudStorage/OneDrive-Personal/Documentos/03-bibliometrics/Q303/001/level1/article_report.csv")
View(article_report_citing1)
library(readr)
rcs_merged_core_llm <- read_csv("~/Library/CloudStorage/OneDrive-Personal/Documentos/03-bibliometrics/Q302 human augmentation (core)/001/level0/rcs_merged_core_llm__.csv")
View(rcs_merged_core_llm)
library(readr)
rcs_merged_citing0_llm <- read_csv("~/Library/CloudStorage/OneDrive-Personal/Documentos/03-bibliometrics/Q303/001/level0/rcs_merged.csv")
View(rcs_merged_citing0_llm)
library(readr)
rcs_merged_citing1_llm <- read_csv("~/Library/CloudStorage/OneDrive-Personal/Documentos/03-bibliometrics/Q303/001/level1/rcs_merged_llm__.csv")
View(rcs_merged_citing1_llm)
rm(article_report)
View(article_report_core)
View(article_report_core)
####
# Flow between core and citing0
flow_core_citing0 <- merge(article_report_core %>%
filter(UT %in% article_report_citing0$UT) %>%
select(cluster_code, UT) %>%
rename(cluster_code_core = cluster_code),
article_report_citing0 %>%
filter(UT %in% article_report_core$UT) %>%
select(cluster_code, UT) %>%
rename(cluster_code_citing0 = cluster_code),
by = UT)
####################################################
# Install packagaes if needed
if (!("tm"          %in% rownames(installed.packages()))) {install.packages("tm")}
if (!("igraph"      %in% rownames(installed.packages()))) {install.packages("igraph")}
if (!("lda"         %in% rownames(installed.packages()))) {install.packages("lda")}
if (!("LDAvis"      %in% rownames(installed.packages()))) {install.packages("LDAvis")}
if (!("servr"       %in% rownames(installed.packages()))) {install.packages("servr")}
if (!("proxy"       %in% rownames(installed.packages()))) {install.packages("proxy")}
if (!("SnowballC"   %in% rownames(installed.packages()))) {install.packages("SnowballC")}
if (!("data.table"  %in% rownames(installed.packages()))) {install.packages("data.table")}
if (!("Rmpfr"       %in% rownames(installed.packages()))) {install.packages("Rmpfr")}
if (!("plyr"        %in% rownames(installed.packages()))) {install.packages("plyr")}
if (!("dplyr"       %in% rownames(installed.packages()))) {install.packages("dplyr")}
if (!("topicmodels" %in% rownames(installed.packages()))) {install.packages("topicmodels")}
if (!("ldatuning"   %in% rownames(installed.packages()))) {install.packages("ldatuning")}
if (!("plotly"      %in% rownames(installed.packages()))) {install.packages("plotly")}
if (!("stringr"     %in% rownames(installed.packages()))) {install.packages("stringr")}
if (!("ngram"       %in% rownames(installed.packages()))) {install.packages("ngram")}
if (!("slam"        %in% rownames(installed.packages()))) {install.packages("slam")}
if (!("Rtsne"       %in% rownames(installed.packages()))) {install.packages("Rtsne")}
if (!("tools"       %in% rownames(installed.packages()))) {install.packages("tools")}
if (!("devtools"    %in% rownames(installed.packages()))) {install.packages("devtools")}
if (!("Opener5"     %in% rownames(installed.packages()))) {
library(devtools)
install_github("cristianmejia00/Opener5")
}
if (!("DT"          %in% rownames(installed.packages()))) {install.packages("DT")}
if (!("glue"        %in% rownames(installed.packages()))) {install.packages("glue")}
if (!("svglite"        %in% rownames(installed.packages()))) {install.packages("svglite")}
####################################################
# Load libraries
library(tm)
library(igraph)
library(lda)
library(LDAvis)
library(servr)
library(proxy)
library(SnowballC)
library(data.table)
# sudo apt-get install libmpfr-dev
library(Rmpfr)
library(plyr)
library(dplyr)
# sudo apt-get install libgsl-dev
library(topicmodels)
library(ldatuning)
# apt-get install r-cran-rjava
#library(qdap)
library(plotly)
library(stringr)
library(ngram)
#library(devtools)
#install_github("cristianmejia00/Opener5")
library(Opener5)
#library(rowr) #Not available for R 3.6.3 (?!) Dont know where it goes.
library(slam)
library(Rtsne)
library(tools)
library(DT)
library(glue)
####
# Flow between core and citing0
flow_core_citing0 <- merge(article_report_core %>%
filter(UT %in% article_report_citing0$UT) %>%
select(cluster_code, UT) %>%
rename(cluster_code_core = cluster_code),
article_report_citing0 %>%
filter(UT %in% article_report_core$UT) %>%
select(cluster_code, UT) %>%
rename(cluster_code_citing0 = cluster_code),
by = UT)
View(article_report_citing0)
####
# Flow between core and citing0
flow_core_citing0 <- merge(article_report_core %>%
filter(UT %in% article_report_citing0$ID) %>%
select(cluster_code, ID) %>%
rename(cluster_code_core = cluster_code),
article_report_citing0 %>%
filter(UT %in% article_report_core$ID) %>%
select(cluster_code, ID) %>%
rename(cluster_code_citing0 = cluster_code),
by = ID)
####
# Flow between core and citing0
flow_core_citing0 <- merge(article_report_core %>%
filter(ID %in% article_report_citing0$ID) %>%
select(cluster_code, ID) %>%
rename(cluster_code_core = cluster_code),
article_report_citing0 %>%
filter(ID %in% article_report_core$ID) %>%
select(cluster_code, ID) %>%
rename(cluster_code_citing0 = cluster_code),
by = ID)
View(article_report_citing0)
View(article_report_citing1)
View(article_report_core)
####
# Flow between core and citing0
flow_core_citing0 <- merge(article_report_core %>%
filter(ID %in% article_report_citing0$ID) %>%
select(cluster_code, ID) %>%
rename(cluster_code_core = cluster_code),
article_report_citing0 %>%
filter(ID %in% article_report_core$ID) %>%
select(cluster_code, ID) %>%
rename(cluster_code_citing0 = cluster_code),
by = "ID")
View(flow_core_citing0)
table(flow_core_citing0$cluster_code_core, flow_core_citing0$cluster_code_citing0)
####
# Flow between core and citing0
flow_core_citing0 <- merge(article_report_core %>%
filter(ID %in% article_report_citing0$ID) %>%
select(cluster_code, ID) %>%
rename(cluster_code_core = cluster_code),
article_report_citing0 %>%
filter(ID %in% article_report_core$ID) %>%
select(cluster_code, ID) %>%
rename(cluster_code_citing0 = cluster_code),
by = "ID") %>% filter(
cluster_code_core != 99,
cluster_code_citing0 !=99
)
table(flow_core_citing0$cluster_code_core, flow_core_citing0$cluster_code_citing0)
table(flow_core_citing0$cluster_code_citing0, flow_core_citing0$cluster_code_core)
save.image("~/Desktop/GitHub/clustering/data_flow_human_augmentation.RData")
load("~/Library/CloudStorage/OneDrive-Personal/Documentos/03-bibliometrics/Q302 human augmentation (core)/001/level0/env20240930_core_llm_completed.rdata")
print("###################### zz-create_bib_file.R")
# transforms from a dataset to .
library(RefManageR)
library(tools)
library(stringr)
# Inputs
#dataset <- dataset[!duplicated(dataset$UT),]
dataset <- dataset
file_name <- file.path(output_folder_level, 'index_files', 'bibliography.bib')
# Check columns
if (!all(c("TI", "AU", "PY", "SO", "VL", "IS", "BP", "DI") %in% colnames(dataset))) {
stop('Necessary column for .bib is missing.')
}
# Utils
#' @description
#' Save all the articles in a dataset as a reference file `.bib`.
#' .bib files can be used in any reference manager like Zotero, and are needed for Latex and Markdown articles.
#' @param a_data_frame DATAFRAME. The dataset. (needed columns: TI, AU, PY, SO, VL, IS, BP, EP, DI, citation_key)
#' @param file_name STRING. The name of the output file including the extension `.bib`
write_refs_from_df <- function (a_data_frame, file_name = "references.bib") {
bib_docs <- lapply(c(1:nrow(a_data_frame)), function(x) {
roww <- a_data_frame[x,]
bib <- c(bibtype = "article",
key = roww$citation_key,
volume = roww$VL %>% gsub("V","",.),
number = roww$IS,
pages = roww$BP %>% gsub("P|U","",.),
title = str_to_sentence(roww$TI),
author = toTitleCase(roww$AU) %>% gsub(";", ". and", .) %>% paste(., ".", sep = ""),
journal = roww$SO %>% tolower() %>% toTitleCase(),
year = if(is.na(roww$PY)) {1800} else {roww$PY},
doi = roww$DI)
return(bib)
}) %>% as.BibEntry()
WriteBib(bib_docs, file = file_name)
}
# Create the keys for citation analysis
citation_keys <- sapply(1:nrow(dataset), \(x) {
if (dataset$AU[x] != '') {
first_au <- gsub(',|;', '', dataset$AU[x]) %>% strsplit(' ') %>% unlist() %>% tolower() %>% .[[1]]
} else {
first_au <- 'anon'
}
first_kwd <- tolower(dataset$TI[x]) %>% gsub('^the |^a |^an ', '', .) %>% gsub(' of | the | a | an | from | to | in | on ', ' ', .) %>% strsplit(' ') %>% unlist() %>% .[c(1:2)] %>% gsub('[[:punct:]]','',.) %>% paste(collapse = '-')
tmp <- paste(first_au, as.character(dataset$PY[x]), first_kwd, sep = '-')
tmp <- gsub('%|:|,|"|;', '', tmp)
if (length(tmp) > 1) {
print(x)
}
return(tmp)
})
citation_keys[duplicated(citation_keys)] <- paste(citation_keys[duplicated(citation_keys)], c(1:length(citation_keys[duplicated(citation_keys)])), sep = '')
dataset$citation_key <- citation_keys
# We get the files that have a summary.
# Because those are the only ones we reference in the generated article
dataset_bibliography <- subset(dataset, summary != '')
write_refs_from_df(dataset_bibliography, file_name = file_name)
file.choose()
file_name = "/Users/cristian/Library/CloudStorage/OneDrive-Personal/Documentos/03-bibliometrics/Q302 human augmentation (core)/001/level0/index_files/bibliography.bib"
write_refs_from_df(dataset_bibliography, file_name = file_name)
print("###################### zz-generate_quarto_document.R")
# Libraries
library(glue)
library(quarto)
bibliometrics_folder <- settings$analysis_metadata$bibliometrics_folder
project_folder <- settings$analysis_metadata$project_folder
analysis_folder <- settings$analysis_metadata$analysis_folder
level_folder <- "level1"
dataset <- dataset
dataset_bibliography <- dataset_bibliography
if(settings$params$type_of_analysis == 'topic_model') {
dataset_bibliography$X_E <- round(dataset_bibliography$new_score,3)
}
# # Initialization
# adjust types
rcs_merged$cluster_code <- as.character(rcs_merged$cluster_code)
dataset$X_C <- as.character(dataset$X_C)
# main_path
main_path <- file.path(
bibliometrics_folder,
project_folder,
analysis_folder,
level_folder
)
# Utils
glue_code <- function(text) {
glue(text, .open = "<<", .close = ">>", .literal = FALSE, .comment = "##")
}
###################################
###################################
qt <- list()
###################################
###################################
# Article metadata
###################################
document_title <- settings$analysis_metadata$project_name %>% toTitleCase()
qt$yml <- glue('---
title: "{document_title}"
author: Cristian Mejia
date: {Sys.Date()}
bibliography: index_files/bibliography.bib
format:
html:
toc: true
toc-title: Contents
toc-depth: 4
editor: visual
---')
###################################
###################################
# Article initialization
###################################
qt$load_data <- glue_code('
```{r, message=FALSE}
#| echo: false
library(dplyr)
library(data.table)
library(DT)
load("settings.rdata")
bibliometrics_folder <- settings$analysis_metadata$bibliometrics_folder
project_folder <- settings$analysis_metadata$project_folder
analysis_folder <- settings$analysis_metadata$analysis_folder
main_path <- file.path(bibliometrics_folder,
project_folder,
analysis_folder,
"<<level_folder>>")
rcs_merged <- read.csv(file.path(main_path, "rcs_merged.csv"))
# if(nrow(rcs_merged) > 0) {
#   stop(is.na(rcs_merged$cluster_name))
# }
```
')
qt$load_data
###################################
###################################
# Data
###################################
if (grepl("academic-landscape.com", settings$analysis_metadata$fukan_url)) {
fukan_url <- glue("[Link]({settings$analysis_metadata$fukan_url})")
} else {
fukan_url <- "Not apply."
}
qt$data <- glue("
| Query           | {settings$analysis_metadata$query}         |
|-----------------|-----------------------------------|
| Database        | {toupper(settings$params$dataset_source)}  |
| Documents       | {settings$analysis_metadata$downloaded_documents}|
| Date retrieved  | {settings$analysis_metadata$date}          |
| Fukan Analysis  | {fukan_url}                       |
| ID              | {settings$analysis_metadata$query_id}  |
: Metadata
")
###################################
###################################
# Methods
###################################
methods <- ''
for (i in settings$rp$methods) {
methods <- glue('{methods}
- {i}
')
}
qt$methods <- methods
# INTRO
displayable_charts <- intersect(settings$rp$categorical_long_reports, colnames(dataset))
rm(chart)
dataset_barcharts <- ''
dataset_trends <- ''
for (chart in displayable_charts) {
dataset_barcharts <- glue_code('<<dataset_barcharts>>
![](index_files/charts/fig_<<chart>>.svg)
')
this_chart_label <- settings$rp$column_labels[chart]
dataset_trends <- glue_code('<<dataset_trends>>
## <<this_chart_label>>
![](index_files/charts/fig_yearly_trends_<<chart>>.svg)
')
}
## Overview
qt$dataset_overview <- glue_code('
::::: panel-tabset
## Years
![Documents per year](index_files/charts/fig_yearly_trends.svg){#fig-docs-per-year}
## Stats
:::: {#fig-panel-dataset-bars layout-ncol=3}
<<dataset_barcharts>>
Dataset stats.
::::
## Stats yearly trends
:::: panel-tabset
<<dataset_trends>>
::::
:::::
')
## Clusters
# List of cluster
cluster_names_list <- ''
tmp <- paste(rcs_merged$cluster_code, '. ', rcs_merged$cluster_name, sep = '')
for (i in tmp) {
cluster_names_list <- glue('{cluster_names_list}
{i}
')
}
qt$cluster_names <- cluster_names_list
# Cluster general figures
qt$clusters_figures <- glue_code('
:::: panel-tabset
## Clusters
![](index_files/charts/fig_scatter_clusters_PY_x_Z9.svg)
## Size
![](index_files/charts/fig_cluster_size_v.svg)
## Trends
![](index_files/charts/fig_yearly_trends_clusters.svg)
## Years
![](index_files/charts/fig_clusters_PY_boxplot.svg)
## Citations
![](index_files/charts/fig_clusters_Z9_boxplot.svg)
## Scatterplots
::: panel-tabset
## Year x Size
![](index_files/charts/fig_scatter_clusters_PY_x_size.svg)
## Year x Citations
![](index_files/charts/fig_scatter_clusters_PY_x_Z9.svg)
## Size x Citations
![](index_files/charts/fig_scatter_clusters_size_x_Z9.svg)
:::
::::
')
# Cluster table
qt$results_table <- '
```{r}
#| echo: false
tmp <- rcs_merged[,c("cluster_code", "cluster_name", "documents", "documents_percent", "PY_Median", "PY_Mean", "Z9_Median", "Z9_Mean", "rcs_label")]
tmp$cluster_code <- gsub("---", "", tmp$cluster_code)
if(all(is.na(rcs_merged$cluster_name))|all(rcs_merged$cluster_name == "")) {
tmp$cluster_name <- sapply(rcs_merged$frequent_keywords, function(x) {
k <- strsplit(x, "; ") %>% unlist()
k <- k[c(1:min(5, length(k)))]
k <- paste(k, collapse = "; ")
})
tmp$cluster_name[tmp$cluster_code %in% c(99,999)] <- "Others"
}
tmp$PY_Mean <- round(tmp$PY_Mean, 1)
tmp$Z9_Mean <- round(tmp$Z9_Mean, 1)
setnames(tmp,
c("cluster_code","cluster_name", "documents", "documents_percent", "PY_Median", "PY_Mean", "Z9_Median", "Z9_Mean", "rcs_label"),
c("Cluster","Name", "Documents", "Documents %", "Year Median", "Year Mean", "Cites Median", "Cites Mean", "Label"))
# Not to display the Cluster name in the table because space.
tmp$Name <- NULL # uncomment this to see the names in the table
datatable(tmp)
```
'
# Write cluster descriptions and paper summaries
list_of_clusters <- dataset$X_C %>%
unique() %>%
sort()
# We need a conversion vector to translate from cluster_code to cluster_id
cluster_conversion <- rcs_merged$cluster
names(cluster_conversion) <- rcs_merged$cluster_code
# We need the length of digits of the largest cluster id so we can add a padding to match the name
char_size <- nchar(as.character(length(cluster_conversion)))
cluster_chart_panel <- list()
for (cluster in list_of_clusters) {
cluster_id <- cluster_conversion[cluster]
cluster_barcharts <- ''
for (chart in displayable_charts) {
cluster_barcharts <- glue_code('<<cluster_barcharts>>
![](index_files/charts/by_clusters/fig_<<str_pad(cluster_id, char_size, "left", "0")>>_<<chart>>.svg)
')}
cluster_chart_panel[[cluster_id]] <- glue_code('
::: {#fig-panel-<<cluster>> layout-ncol=3}
<<cluster_barcharts>>
Cluster <<cluster>> stats.
:::
')
}
qt$clusters <- ""
for (cluster in list_of_clusters) {
cluster_main_description <- glue("
#### Cluster {cluster}: {rcs_merged$cluster_name[rcs_merged$cluster_code == cluster]}
`Documents: {rcs_merged$documents[rcs_merged$cluster_code == cluster]}; Ave. Year: {round(rcs_merged$PY_Mean[rcs_merged$cluster_code == cluster],1)}; Ave. Citations: {round(rcs_merged$Z9_Mean[rcs_merged$cluster_code == cluster],1)}`
{rcs_merged$description[rcs_merged$cluster_code == cluster]}
")
cluster_data <- subset(dataset_bibliography, X_C == cluster)
cluster_papers_description <- list()
for (i in c(1:nrow(cluster_data))) {
cluster_papers_description[[i]] <- glue("{cluster_data$summary[i]} [@{cluster_data$citation_key[i]}]  `degree: {cluster_data$X_E[i]}` `citations: {cluster_data$Z9[i]}`  ", .literal = TRUE)
}
cluster_papers_description <- paste(cluster_papers_description, collapse = "\n")
qt$clusters <- glue("{qt$clusters}
{cluster_main_description}
{cluster_chart_panel[[min(length(list_of_clusters), cluster_conversion[cluster])]]}
**Articles:**
{cluster_papers_description}
---
")
}
###################################
###################################
# DOCUMENT
###################################
quarto_document <- glue('
{qt$yml}
{qt$load_data}
## Data and Methods
### Data
{qt$data}
### Methods
{qt$methods}
## Results
### Dataset Overview
{qt$dataset_overview}
### Clusters
{qt$cluster_names}
{qt$clusters_figures}
{qt$results_table}
{qt$clusters}
')
if (nchar(quarto_document) == 0) {
stop('The generated quarto ducument is blank.')
}
# Write the file
fileConn <- file(file.path(output_folder_level, "index.qmd"))
writeLines(quarto_document, fileConn)
output_folder_level <- '/Users/cristian/Library/CloudStorage/OneDrive-Personal/Documentos/03-bibliometrics/Q302 human augmentation (core)/001/level0/index.qmd'
# Write the file
fileConn <- file(file.path(output_folder_level, "index.qmd"))
writeLines(quarto_document, fileConn)
output_folder_level <- '/Users/cristian/Library/CloudStorage/OneDrive-Personal/Documentos/03-bibliometrics/Q302 human augmentation (core)/001/level0'
# Write the file
fileConn <- file(file.path(output_folder_level, "index.qmd"))
writeLines(quarto_document, fileConn)
close(fileConn)
# Render the file to HTML
# settings.R and bibliography.bib must be on the same directory as index.qmd
quarto_render(file.path(output_folder_level, "index.qmd"))
