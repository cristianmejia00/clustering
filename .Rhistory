if (show_tags) {
p <- p + geom_text_repel(aes(label = gsub("---", "", labels)))
}
p <- p + theme_bw() + theme(legend.position = "none")
p
}
# Groups
plot_scatter_group(tmp,
point_labels = "label",
x_column = "x",
y_column = "y",
color_hex_column = "color",
color_labels = "institution",
size_column = "Count",
show_tags = TRUE)
#################################################
# Aux plot function
plot_scatter <- function(rcs_data,
point_labels,
x_column,
y_column,
color_hex_column,
color_labels,
size_column,
x_column_label = x_column,
y_column_label = y_column,
show_tags = TRUE) {
# format the df
df <- rcs_data[, c(point_labels, x_column, y_column, color_hex_column, color_labels, size_column)]
colnames(df) <- c("point_labels", "x",    "y",       "color_hex",      "color_label", "size")
df$labels <- as.character(df$point_labels)
# color mapping
color_df <- rcs_data[!duplicated(rcs_data$institution), c('color', 'institution')]
color_vct <- color_df$color
names(color_vct) <- color_df$institution
color_vct <- color_vct[c('PIK', 'RIKEN.Bio', 'RIKEN.Sus')]
print(color_vct)
# plot
p <- ggplot(df, aes(x = x, y = y)) +
geom_point(aes(colour = color_label,
size = size)) +
scale_color_manual(values = color_vct) +
scale_x_continuous(limits = c(2005, 2022)) + # = seq(2005, 2022, by = 2)) +
#scale_x_continuous(breaks = seq(2005, 2022, by = 2)) +
scale_y_continuous(limits = c(0, 350)) +
xlab("") +
ylab("")
if (show_tags) {
p <- p + geom_text_repel(aes(label = gsub("---", "", labels)))
}
p <- p + theme_bw() + theme(legend.position = "none")
p
}
plot_scatter(tmp[tmp$institution == 'PIK',],
point_labels = "Name2",
x_column = "ave_PY",
y_column = "ave_Z9",
color_hex_column = "color",
color_labels = "institution",
size_column = "Count",
show_tags = TRUE)
plot_scatter(tmp[tmp$institution == 'RIKEN.Sus',],
point_labels = "Name2",
x_column = "ave_PY",
y_column = "ave_Z9",
color_hex_column = "color",
color_labels = "institution",
size_column = "Count",
show_tags = TRUE)
plot_scatter(tmp[tmp$institution == 'RIKEN.Bio',],
point_labels = "Name2",
x_column = "ave_PY",
y_column = "ave_Z9",
color_hex_column = "color",
color_labels = "institution",
size_column = "Count",
show_tags = TRUE)
#################
################################################## HEATMAP
matrix_to_sorted_df <- function(mat) {
# Ensure the matrix is symmetric
if (!isSymmetric(mat)) {
stop("Input matrix must be symmetric")
}
# Get lower triangular matrix without diagonal
lower_tri <- lower.tri(mat)
# Create a data frame with pairwise combinations
df <- data.frame(
row = row(mat)[lower_tri],
col = col(mat)[lower_tri],
value = mat[lower_tri]
)
# Add row and column names
df$row_name <- rownames(mat)[df$row]
df$col_name <- colnames(mat)[df$col]
# Remove pairs with zero value
df <- df[df$value != 0, ]
# Sort by value in descending order
df <- df[order(-df$value), ]
# Select and rename columns
result <- df[, c("row_name", "col_name", "value")]
colnames(result) <- c("cluster_a", "cluster_b", "similarity")
return(result)
}
heatmap <- readr::read_csv("~/Library/CloudStorage/GoogleDrive-cristianmejia00@gmail.com/My Drive/PIK-RIKEN/heatmap_updated2.csv")
heatmap <- as.matrix(heatmap)
rownames(heatmap) <- colnames(heatmap)
tmp$Name3 <- sapply(c(1:nrow(tmp)), function(x) {
ttt <- strsplit(tmp$Name[[x]], '_')
ttt <- paste(ttt[[1]][1:4], collapse = '_')
print(ttt)
return(ttt)
})
heatmap_pairs <- matrix_to_sorted_df(heatmap)
heatmap_pairs$cluster_a <- substr(heatmap_pairs$cluster_a)
heatmap_pairs$cluster_a <- substr(heatmap_pairs$cluster_a, 0, 25)
heatmap_pairs$cluster_b <- substr(heatmap_pairs$cluster_b, 0, 25)
heatmap_pairs_selected <- heatmap_pairs[c(1:20),]
heatmap_pairs_selected <- heatmap_pairs[c(1:20),]
heatmap_pairs_selected$cluster_a_label <- tmp$Name2[match(heatmap_pairs_selected$cluster_a, tmp$Name0)]
heatmap_pairs_selected$cluster_b_label <- tmp$Name2[match(heatmap_pairs_selected$cluster_b, tmp$Name0)]
heatmap_pairs_selected$cluster_a_code <- tmp$cluster_code[match(heatmap_pairs_selected$cluster_a, tmp$Name0)]
heatmap_pairs_selected$cluster_b_code <- tmp$cluster_code[match(heatmap_pairs_selected$cluster_b, tmp$Name0)]
View(heatmap_pairs_selected)
heatmap <- readr::read_csv("~/Library/CloudStorage/GoogleDrive-cristianmejia00@gmail.com/My Drive/PIK-RIKEN/heatmap_updated2.csv")
heatmap <- as.matrix(heatmap)
rownames(heatmap) <- colnames(heatmap)
heatmap_pairs <- matrix_to_sorted_df(heatmap)
heatmap_pairs$cluster_a <- substr(heatmap_pairs$cluster_a, 1, 25)
heatmap_pairs$cluster_b <- substr(heatmap_pairs$cluster_b, 1, 25)
heatmap_pairs_selected <- heatmap_pairs[c(1:20),]
heatmap_pairs_selected$cluster_a_label <- tmp$Name2[match(heatmap_pairs_selected$cluster_a, tmp$Name0)]
heatmap_pairs_selected$cluster_b_label <- tmp$Name2[match(heatmap_pairs_selected$cluster_b, tmp$Name0)]
heatmap_pairs_selected$cluster_a_code <- tmp$cluster_code[match(heatmap_pairs_selected$cluster_a, tmp$Name0)]
heatmap_pairs_selected$cluster_b_code <- tmp$cluster_code[match(heatmap_pairs_selected$cluster_b, tmp$Name0)]
View(heatmap_pairs_selected)
tttt <- substr(tmp$Name, 1, 10)
tttt <- substr(tmp$Name, 1, 10)
heatmap_pairs_selected <- heatmap_pairs[c(1:20),]
heatmap_pairs_selected$cluster_a_label <- tmp$Name2[match(heatmap_pairs_selected$cluster_a, tttt)]
heatmap_pairs_selected$cluster_b_label <- tmp$Name2[match(heatmap_pairs_selected$cluster_b, tttt)]
heatmap_pairs_selected$cluster_a_code <- tmp$cluster_code[match(heatmap_pairs_selected$cluster_a, tttt)]
heatmap_pairs_selected$cluster_b_code <- tmp$cluster_code[match(heatmap_pairs_selected$cluster_b, tttt)]
View(heatmap_pairs_selected)
heatmap <- readr::read_csv("~/Library/CloudStorage/GoogleDrive-cristianmejia00@gmail.com/My Drive/PIK-RIKEN/heatmap_updated2.csv")
heatmap <- as.matrix(heatmap)
rownames(heatmap) <- colnames(heatmap)
heatmap_pairs <- matrix_to_sorted_df(heatmap)
heatmap_pairs$cluster_a <- substr(heatmap_pairs$cluster_a, 1, 10)
heatmap_pairs$cluster_b <- substr(heatmap_pairs$cluster_b, 1, 10)
View(heatmap_pairs)
heatmap <- readr::read_csv("~/Library/CloudStorage/GoogleDrive-cristianmejia00@gmail.com/My Drive/PIK-RIKEN/heatmap_updated2.csv")
heatmap <- as.matrix(heatmap)
rownames(heatmap) <- colnames(heatmap)
heatmap_pairs <- matrix_to_sorted_df(heatmap)
heatmap_pairs$cluster_a <- substr(heatmap_pairs$cluster_a, 1, 15)
heatmap_pairs$cluster_b <- substr(heatmap_pairs$cluster_b, 1, 15)
tttt <- substr(tmp$Name, 1, 15)
heatmap_pairs_selected <- heatmap_pairs[c(1:20),]
heatmap_pairs_selected$cluster_a_label <- tmp$Name2[match(heatmap_pairs_selected$cluster_a, tttt)]
heatmap_pairs_selected$cluster_b_label <- tmp$Name2[match(heatmap_pairs_selected$cluster_b, tttt)]
heatmap_pairs_selected$cluster_a_code <- tmp$cluster_code[match(heatmap_pairs_selected$cluster_a, tttt)]
heatmap_pairs_selected$cluster_b_code <- tmp$cluster_code[match(heatmap_pairs_selected$cluster_b, tttt)]
View(heatmap_pairs_selected)
View(tmp)
################################################## RCS
rcs_merged <- readr::read_csv("~/Library/CloudStorage/GoogleDrive-cristianmejia00@gmail.com/My Drive/PIK-RIKEN/topic_model_info_updated_PIK-RIKEN_2024-09-12.csv")
rcs_merged$cluster_name <- cluster_names$X_C_label[match(rcs_merged$Topic, cluster_names$X_C)]
rcs_merged$cluster_code <- rcs_merged$cluster_name
# cluster idx within institution
rcs_merged$idx <- sapply(rcs_merged$cluster_name, function(x) {
ttt <- strsplit(x, '-')
return(as.numeric(ttt[[1]][2]))
})
rcs_merged$Name0 <- substr(rcs_merged$Name, 1, 25)
rcs_merged$Name2 <- sapply(c(1:nrow(rcs_merged)), function(x) {
ttt <- strsplit(rcs_merged$Name[[x]], '_')
ttt <- paste(ttt[[1]][-1], collapse = '_')
print(ttt)
tmp <- paste(as.character(rcs_merged$idx[[x]]), ttt, sep = ":")
print(tmp)
return(tmp)
})
rcs_merged$Name2 <- gsub('_fecal', '',rcs_merged$Name2)
rcs_merged <- merge(rcs_merged,
summary_rcs,
by.x = 'cluster_code',
by.y = 'X_C_label')
################################################# Coords
coords <- readr::read_csv("~/Library/CloudStorage/GoogleDrive-cristianmejia00@gmail.com/My Drive/PIK-RIKEN/reduced_data_PIK-RIKEN_2024-09-12.csv")
coords <- coords %>% rename(c('Name0' = 'label'))
coords$Name0 <- substr(coords$Name0, 1, 25)
################################################## Plot
# Attach x and y
tmp <- merge(rcs_merged,
coords,
by='Name0')
View(coords)
View(rcs_merged)
View(coords)
################################################## Plot
# Attach x and y
tmp <- merge(rcs_merged,
coords,
by='Name0')
rcs_merged$Name0 %in% coords$Name0
rcs_merged$Name0[!rcs_merged$Name0 %in% coords$Name0]
View(coords)
rcs_merged$Name0 <- substr(rcs_merged$Name, 1, 7)
coords$Name0 <- substr(coords$Name0, 1, 7)
rcs_merged$Name0[!rcs_merged$Name0 %in% coords$Name0]
################################################## Plot
# Attach x and y
tmp <- merge(rcs_merged,
coords,
by='Name0')
# Add color categories
tmp$color[grepl("PIK", tmp$cluster_name)] <- "#E9571F"
tmp$color[grepl("RIKEN.Bio", tmp$cluster_name)] <- '#4C962F'
tmp$color[grepl("RIKEN.Sust", tmp$cluster_name)] <- '#150A9A'
# Add abbreviations
tmp$institution[grepl("PIK", tmp$cluster_name)] <- "PIK"
tmp$institution[grepl("RIKEN.Bio", tmp$cluster_name)] <- 'RIKEN.Bio'
tmp$institution[grepl("RIKEN.Sus", tmp$cluster_name)] <- 'RIKEN.Sus'
# # Replace with Abreviation
tmp$label <- gsub("PIK", "PIK", tmp$cluster_name)
tmp$label <- gsub("RIKEN.Bio", "RKN.Bio", tmp$cluster_name)
tmp$label <- gsub("RIKEN.Sust", "RKN.Sus", tmp$cluster_name)
# Groups of clusters
km1 <- kmeans(tmp[,c("x","y")], centers = 3)
tmp$group1 <- as.factor(km1$cluster)
# Aux plot function
plot_scatter_group <- function(rcs_data,
point_labels,
x_column,
y_column,
color_hex_column,
color_labels,
size_column,
x_column_label = x_column,
y_column_label = y_column,
show_tags = TRUE) {
# format the df
df <- rcs_data[, c(point_labels, x_column, y_column, color_hex_column, color_labels, size_column)]
colnames(df) <- c("point_labels", "x",    "y",       "color_hex",      "color_label", "size")
df$labels <- as.character(df$point_labels)
# color mapping
color_df <- rcs_data[!duplicated(rcs_data$label), c('color', 'institution')]
color_vct <- color_df$color
names(color_vct) <- color_df$institution
color_vct <- color_vct[c('PIK', 'RIKEN.Bio', 'RIKEN.Sus')]
print(color_vct)
# plot
p <- ggplot(df, aes(x = x, y = y)) +
stat_ellipse(geom = "polygon",
aes(linetype = rcs_data$group1),
alpha=0.07) + #0.07 OR 0.35 for colors
geom_point(aes(colour = color_label,
size = size)) +
scale_color_manual(values = color_vct) +
xlab("") +
ylab("")
if (show_tags) {
p <- p + geom_text_repel(aes(label = gsub("---", "", labels)))
}
p <- p + theme_bw() + theme(legend.position = "none")
p
}
# Groups
plot_scatter_group(tmp,
point_labels = "label",
x_column = "x",
y_column = "y",
color_hex_column = "color",
color_labels = "institution",
size_column = "Count",
show_tags = TRUE)
# Groups of clusters
km1 <- kmeans(tmp[,c("x","y")], centers = 4)
tmp$group1 <- as.factor(km1$cluster)
# Aux plot function
plot_scatter_group <- function(rcs_data,
point_labels,
x_column,
y_column,
color_hex_column,
color_labels,
size_column,
x_column_label = x_column,
y_column_label = y_column,
show_tags = TRUE) {
# format the df
df <- rcs_data[, c(point_labels, x_column, y_column, color_hex_column, color_labels, size_column)]
colnames(df) <- c("point_labels", "x",    "y",       "color_hex",      "color_label", "size")
df$labels <- as.character(df$point_labels)
# color mapping
color_df <- rcs_data[!duplicated(rcs_data$label), c('color', 'institution')]
color_vct <- color_df$color
names(color_vct) <- color_df$institution
color_vct <- color_vct[c('PIK', 'RIKEN.Bio', 'RIKEN.Sus')]
print(color_vct)
# plot
p <- ggplot(df, aes(x = x, y = y)) +
stat_ellipse(geom = "polygon",
aes(linetype = rcs_data$group1),
alpha=0.07) + #0.07 OR 0.35 for colors
geom_point(aes(colour = color_label,
size = size)) +
scale_color_manual(values = color_vct) +
xlab("") +
ylab("")
if (show_tags) {
p <- p + geom_text_repel(aes(label = gsub("---", "", labels)))
}
p <- p + theme_bw() + theme(legend.position = "none")
p
}
# Groups
plot_scatter_group(tmp,
point_labels = "label",
x_column = "x",
y_column = "y",
color_hex_column = "color",
color_labels = "institution",
size_column = "Count",
show_tags = TRUE)
#################################################
# Aux plot function
plot_scatter <- function(rcs_data,
point_labels,
x_column,
y_column,
color_hex_column,
color_labels,
size_column,
x_column_label = x_column,
y_column_label = y_column,
show_tags = TRUE) {
# format the df
df <- rcs_data[, c(point_labels, x_column, y_column, color_hex_column, color_labels, size_column)]
colnames(df) <- c("point_labels", "x",    "y",       "color_hex",      "color_label", "size")
df$labels <- as.character(df$point_labels)
# color mapping
color_df <- rcs_data[!duplicated(rcs_data$institution), c('color', 'institution')]
color_vct <- color_df$color
names(color_vct) <- color_df$institution
color_vct <- color_vct[c('PIK', 'RIKEN.Bio', 'RIKEN.Sus')]
print(color_vct)
# plot
p <- ggplot(df, aes(x = x, y = y)) +
geom_point(aes(colour = color_label,
size = size)) +
scale_color_manual(values = color_vct) +
scale_x_continuous(limits = c(2005, 2022)) + # = seq(2005, 2022, by = 2)) +
#scale_x_continuous(breaks = seq(2005, 2022, by = 2)) +
scale_y_continuous(limits = c(0, 350)) +
xlab("") +
ylab("")
if (show_tags) {
p <- p + geom_text_repel(aes(label = gsub("---", "", labels)))
}
p <- p + theme_bw() + theme(legend.position = "none")
p
}
plot_scatter(tmp[tmp$institution == 'PIK',],
point_labels = "Name2",
x_column = "ave_PY",
y_column = "ave_Z9",
color_hex_column = "color",
color_labels = "institution",
size_column = "Count",
show_tags = TRUE)
plot_scatter(tmp[tmp$institution == 'RIKEN.Sus',],
point_labels = "Name2",
x_column = "ave_PY",
y_column = "ave_Z9",
color_hex_column = "color",
color_labels = "institution",
size_column = "Count",
show_tags = TRUE)
plot_scatter(tmp[tmp$institution == 'RIKEN.Bio',],
point_labels = "Name2",
x_column = "ave_PY",
y_column = "ave_Z9",
color_hex_column = "color",
color_labels = "institution",
size_column = "Count",
show_tags = TRUE)
##################
write.csv(tmp, file='rcs_final_pik_riken.csv', row.names = FALSE)
test <- dataset %>%
group_by(X_C_label) %>%
top_n(10, wt=Score) %>%
top_n(10, wt=Z9) %>%
select(X_C, X_C_label, Score, Z9, AU, PY, SO, TI, AB) %>%
arrange(X_C, desc(Score), desc(Z9))
write.csv(test, file='dataset_top10.csv', row.names = FALSE)
#################
################################################## HEATMAP
matrix_to_sorted_df <- function(mat) {
# Ensure the matrix is symmetric
if (!isSymmetric(mat)) {
stop("Input matrix must be symmetric")
}
# Get lower triangular matrix without diagonal
lower_tri <- lower.tri(mat)
# Create a data frame with pairwise combinations
df <- data.frame(
row = row(mat)[lower_tri],
col = col(mat)[lower_tri],
value = mat[lower_tri]
)
# Add row and column names
df$row_name <- rownames(mat)[df$row]
df$col_name <- colnames(mat)[df$col]
# Remove pairs with zero value
df <- df[df$value != 0, ]
# Sort by value in descending order
df <- df[order(-df$value), ]
# Select and rename columns
result <- df[, c("row_name", "col_name", "value")]
colnames(result) <- c("cluster_a", "cluster_b", "similarity")
return(result)
}
heatmap <- readr::read_csv("~/Library/CloudStorage/GoogleDrive-cristianmejia00@gmail.com/My Drive/PIK-RIKEN/heatmap_updated2.csv")
heatmap <- as.matrix(heatmap)
rownames(heatmap) <- colnames(heatmap)
heatmap_pairs <- matrix_to_sorted_df(heatmap)
heatmap_pairs <- matrix_to_sorted_df(heatmap)
heatmap_pairs$cluster_a <- substr(heatmap_pairs$cluster_a, 1, 7)
heatmap_pairs$cluster_b <- substr(heatmap_pairs$cluster_b, 1, 7)
tttt <- substr(tmp$Name, 1, 7)
heatmap_pairs_selected <- heatmap_pairs[c(1:20),]
heatmap_pairs_selected$cluster_a_label <- tmp$Name2[match(heatmap_pairs_selected$cluster_a, tttt)]
heatmap_pairs_selected$cluster_b_label <- tmp$Name2[match(heatmap_pairs_selected$cluster_b, tttt)]
heatmap_pairs_selected$cluster_a_code <- tmp$cluster_code[match(heatmap_pairs_selected$cluster_a, tttt)]
heatmap_pairs_selected$cluster_b_code <- tmp$cluster_code[match(heatmap_pairs_selected$cluster_b, tttt)]
View(heatmap_pairs_selected)
heatmap_pairs_selected <- heatmap_pairs[c(1:100),]
heatmap_pairs_selected$cluster_a_label <- tmp$Name2[match(heatmap_pairs_selected$cluster_a, tttt)]
heatmap_pairs_selected$cluster_b_label <- tmp$Name2[match(heatmap_pairs_selected$cluster_b, tttt)]
heatmap_pairs_selected$cluster_a_code <- tmp$cluster_code[match(heatmap_pairs_selected$cluster_a, tttt)]
heatmap_pairs_selected$cluster_b_code <- tmp$cluster_code[match(heatmap_pairs_selected$cluster_b, tttt)]
View(heatmap_pairs_selected)
View(heatmap)
heatmap$code <- tmp$cluster_code[match(substr(rownames(heatmap),1,7), tttt)]
View(heatmap)
heatmap <- readr::read_csv("~/Library/CloudStorage/GoogleDrive-cristianmejia00@gmail.com/My Drive/PIK-RIKEN/heatmap_updated2.csv")
heatmap <- as.matrix(heatmap)
rownames(heatmap) <- colnames(heatmap)
heatmap <- as.data.frame(heatmap)
heatmap$code <- tmp$cluster_code[match(substr(rownames(heatmap),1,7), tttt)]
View(heatmap)
heatmap <- as.data.frame(heatmap)
heatmap$code <- tmp$cluster_code[match(substr(rownames(heatmap),1,7), tttt)]
heatmap$inst <- tmp$institution[match(substr(rownames(heatmap),1,7), tttt)]
heatmap$idx <- tmp$idx[match(substr(rownames(heatmap),1,7), tttt)]
View(heatmap)
write.csv(heatmap, file = 'heatmap.csv', row.names = FALSE)
View(heatmap)
heatmap <- readr::read_csv("~/Library/CloudStorage/GoogleDrive-cristianmejia00@gmail.com/My Drive/PIK-RIKEN/heatmap_updated2.csv")
heatmap <- as.matrix(heatmap)
rownames(heatmap) <- colnames(heatmap)
heatmap_pairs <- matrix_to_sorted_df(heatmap)
heatmap_pairs$cluster_a <- substr(heatmap_pairs$cluster_a, 1, 7)
heatmap_pairs$cluster_b <- substr(heatmap_pairs$cluster_b, 1, 7)
tttt <- substr(tmp$Name, 1, 7)
heatmap_pairs_selected <- heatmap_pairs[c(1:100),]
heatmap_pairs_selected$cluster_a_label <- tmp$Name2[match(heatmap_pairs_selected$cluster_a, tttt)]
heatmap_pairs_selected$cluster_b_label <- tmp$Name2[match(heatmap_pairs_selected$cluster_b, tttt)]
heatmap_pairs_selected$cluster_a_code <- tmp$cluster_code[match(heatmap_pairs_selected$cluster_a, tttt)]
heatmap_pairs_selected$cluster_b_code <- tmp$cluster_code[match(heatmap_pairs_selected$cluster_b, tttt)]
heatmap <- as.data.frame(heatmap)
heatmap$code <- tmp$cluster_code[match(substr(rownames(heatmap),1,7), tttt)]
heatmap$inst <- tmp$institution[match(substr(rownames(heatmap),1,7), tttt)]
heatmap$idx <- tmp$idx[match(substr(rownames(heatmap),1,7), tttt)]
write.csv(heatmap, file = 'heatmap.csv', row.names = FALSE)
View(heatmap)
View(heatmap_pairs_selected)
heatmap_pairs_selected$cross_institution <- (grepl('PIK', heatmap_pairs_selected$cluster_a_label) & grepl('RIKEN', heatmap_pairs_selected$cluster_b_label)) | ( grepl('RIKEN', heatmap_pairs_selected$cluster_a_label) & grepl('PIK', heatmap_pairs_selected$cluster_b_label))
View(heatmap_pairs_selected)
heatmap_pairs_selected <- heatmap_pairs
heatmap_pairs_selected$cluster_a_label <- tmp$Name2[match(heatmap_pairs_selected$cluster_a, tttt)]
heatmap_pairs_selected$cluster_b_label <- tmp$Name2[match(heatmap_pairs_selected$cluster_b, tttt)]
heatmap_pairs_selected$cluster_a_code <- tmp$cluster_code[match(heatmap_pairs_selected$cluster_a, tttt)]
heatmap_pairs_selected$cluster_b_code <- tmp$cluster_code[match(heatmap_pairs_selected$cluster_b, tttt)]
heatmap_pairs_selected$cross_institution <- (grepl('PIK', heatmap_pairs_selected$cluster_a_label) & grepl('RIKEN', heatmap_pairs_selected$cluster_b_label)) | ( grepl('RIKEN', heatmap_pairs_selected$cluster_a_label) & grepl('PIK', heatmap_pairs_selected$cluster_b_label))
View(heatmap_pairs_selected)
heatmap_pairs_selected$cross_institution <- (grepl('PIK', heatmap_pairs_selected$cluster_a_code) & grepl('RIKEN', heatmap_pairs_selected$cluster_b_code)) | ( grepl('RIKEN', heatmap_pairs_selected$cluster_a_code) & grepl('PIK', heatmap_pairs_selected$cluster_b_code))
View(heatmap_pairs_selected)
View(heatmap_pairs_selected)
heatmap_pairs_selected <- heatmap_pairs_selected %>%
select(-cluster_a, -cluster_b) %>%
mutate(rank = dense_rank(desc(similarity))) %>%
relocate(rank)
View(heatmap_pairs_selected)
write.csv(heatmap_pairs_selected, file = 'heatmap_pairs.csv', row.names = FALSE)
################## Save the cluster summary and the dataset
write.csv(tmp %>%
select(cluster_code, Name2, Count, ave_Z9, ave_PY,
Representation, Representative_Docs,
x, y, color,
institution, idx, label, group1) %>%
rename(
'Name' = Name2,
'Groups' = group1
),
file='rcs_final_pik_riken.csv',
row.names = FALSE)
table(dataset_sust_bio$riken_both)
table(dataset_sust_bio$source_2)
save.image("~/Desktop/GitHub/clustering/env20240913.RData")
